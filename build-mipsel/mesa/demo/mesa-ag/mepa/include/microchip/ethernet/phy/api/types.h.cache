{:	root[{{:ppo:Parslet::Slice:@positiono:Parslet::Position:@string"ÍN// Copyright (c) 2004-2020 Microchip Technology Inc. and its subsidiaries.
// SPDX-License-Identifier: MIT

#ifndef _MICROCHIP_ETHERNET_PHY_API_TYPES_H_
#define _MICROCHIP_ETHERNET_PHY_API_TYPES_H_

#include <microchip/ethernet/common.h>
#include <microchip/ethernet/hdr_start.h>  /**< ALL INCLUDE ABOVE THIS LINE */

struct mepa_callout_ctx;

struct mepa_ts_driver;

/** \brief Contains methods that are specific to each phy. */
struct mepa_driver;

/** \brief Represents an instance of the mepa_driver. */
struct mepa_device;
typedef struct mepa_device mepa_device_t;

/**  This is pure annotation to warn the user that a given pointer will be used
     stored internally and used at a later point in time. Application is
     responsible for ensuring that such pointers remains valid through out the
     lifetime of the givne MEPA instance. */
#define MEPA_SHARED_PTR

typedef mesa_aneg_t mepa_aneg_t;
typedef mesa_bool_t mepa_bool_t;
typedef mesa_chip_no_t mepa_chip_no_t;
typedef mesa_fiber_port_speed_t mepa_fiber_port_speed_t;
typedef mesa_phy_mdi_t mepa_mdi_t;
typedef mesa_phy_media_interface_t mepa_media_interface_t;
typedef mesa_port_interface_t mepa_port_interface_t;
typedef mesa_port_no_t mepa_port_no_t;
typedef mesa_port_speed_t mepa_port_speed_t;
typedef mesa_rc mepa_rc;
typedef mesa_sd10g_media_type_t mepa_sd10g_media_type_t;
typedef mesa_phy_power_mode_t mepa_power_mode_t;
typedef mesa_phy_status_1g_t mepa_aneg_status_t;
typedef mesa_phy_rgmii_conf_t mepa_rgmii_conf_t;
typedef mesa_phy_tbi_conf_t mepa_tbi_conf_t;
typedef mesa_phy_forced_reset_t mepa_forced_reset_t;
typedef mesa_phy_pkt_mode_t mepa_pkt_mode_t;
typedef mesa_phy_reset_conf_t mepa_reset_conf_t;
typedef mesa_phy_event_t mepa_event_t;
typedef mesa_phy_veriphy_status_t mepa_cable_diag_status_t;
typedef mesa_port_admin_state_t mepa_port_admin_state_t;
typedef mesa_debug_printf_t mepa_debug_print_t;
typedef uint16_t mepa_vid_t;
typedef uint16_t mepa_etype_t;

/** \brief Advertise disable flags. */
typedef enum {
    MEPA_ADV_DIS_HDX = 0x00000001,     /**< Disable Half duplex */
    MEPA_ADV_DIS_FDX = 0x00000002,     /**< Disable Full duplex */
    MEPA_ADV_UP_MEP_LOOP = 0x00000004, /**< Use port for UP MEP loop port */
    MEPA_ADV_DIS_2500M = 0x00000008,   /**< Disable 2.5G mode */
    MEPA_ADV_DIS_1G = 0x00000010,      /**< Disable 1G mode */
    MEPA_ADV_DIS_100M = 0x00000040,    /**< Disable 100Mbit mode */
    MEPA_ADV_DIS_10M = 0x00000080,     /**< Disable 10Mbit mode */
    MEPA_ADV_DIS_5G = 0x00000100,      /**< Disable 5G mode */
    MEPA_ADV_DIS_10G = 0x00000200,     /**< Disable 10G mode */
    MEPA_ADV_DIS_RESTART_ANEG = 0x00000400, /**< Do not restart aneg */
    MEPA_ADV_DIS_SPEED =
        (MEPA_ADV_DIS_10M | MEPA_ADV_DIS_100M | MEPA_ADV_DIS_1G |
         MEPA_ADV_DIS_2500M | MEPA_ADV_DIS_5G |
         MEPA_ADV_DIS_10G), /**< All speed bits */
    MEPA_ADV_DIS_DUPLEX =
        (MEPA_ADV_DIS_HDX | MEPA_ADV_DIS_FDX), /**< All duplex bits */
    MEPA_ADV_DIS_ALL = (MEPA_ADV_DIS_SPEED | MEPA_ADV_DIS_DUPLEX |
                            MEPA_ADV_UP_MEP_LOOP) /**< All valid bits */
} mepa_adv_dis_t;


/** \brief Port speeds */
#define MEPA_SPEED_UNDEFINED MESA_SPEED_UNDEFINED
#define MEPA_SPEED_10M       MESA_SPEED_10M
#define MEPA_SPEED_100M      MESA_SPEED_100M
#define MEPA_SPEED_1G        MESA_SPEED_1G
#define MEPA_SPEED_AUTO      MESA_SPEED_AUTO

typedef mesa_port_admin_state_t mepa_port_admin_state_t;

/** \brief Port speeds */
#define MEPA_SPEED_UNDEFINED MESA_SPEED_UNDEFINED
#define MEPA_SPEED_10M       MESA_SPEED_10M
#define MEPA_SPEED_100M      MESA_SPEED_100M
#define MEPA_SPEED_1G        MESA_SPEED_1G
#define MEPA_SPEED_AUTO      MESA_SPEED_AUTO


/** \brief Cable diagnostics status */
#define MEPA_CABLE_DIAG_STATUS_OK        MESA_VERIPHY_STATUS_OK
#define MEPA_CABLE_DIAG_STATUS_OPEN      MESA_VERIPHY_STATUS_OPEN
#define MEPA_CABLE_DIAG_STATUS_SHORT     MESA_VERIPHY_STATUS_SHORT
#define MEPA_CABLE_DIAG_STATUS_ABNORM    MESA_VERIPHY_STATUS_ABNORM
#define MEPA_CABLE_DIAG_STATUS_SHORT_A   MESA_VERIPHY_STATUS_SHORT_A
#define MEPA_CABLE_DIAG_STATUS_SHORT_B   MESA_VERIPHY_STATUS_SHORT_B
#define MEPA_CABLE_DIAG_STATUS_SHORT_C   MESA_VERIPHY_STATUS_SHORT_C
#define MEPA_CABLE_DIAG_STATUS_SHORT_D   MESA_VERIPHY_STATUS_SHORT_D
#define MEPA_CABLE_DIAG_STATUS_COUPL_A   MESA_VERIPHY_STATUS_COUPL_A
#define MEPA_CABLE_DIAG_STATUS_COUPL_B   MESA_VERIPHY_STATUS_COUPL_B
#define MEPA_CABLE_DIAG_STATUS_COUPL_C   MESA_VERIPHY_STATUS_COUPL_C
#define MEPA_CABLE_DIAG_STATUS_COUPL_D   MESA_VERIPHY_STATUS_COUPL_D
#define MEPA_CABLE_DIAG_STATUS_UNKNOWN   MESA_VERIPHY_STATUS_UNKNOWN
#define MEPA_CABLE_DIAG_STATUS_RUNNING   MESA_VERIPHY_STATUS_RUNNING

/** \brief PHY events */
#define MEPA_LINK_LOS MESA_PHY_LINK_LOS_EV
#define MEPA_FAST_LINK_FAIL MESA_PHY_LINK_FFAIL_EV

/** \brief PHY auto negotiation advertisement */
typedef struct {
    mepa_bool_t speed_10m_hdx;    /**< 10Mbps, half duplex */
    mepa_bool_t speed_10m_fdx;    /**< 10Mbps, full duplex */
    mepa_bool_t speed_100m_hdx;   /**< 100Mbps, half duplex */
    mepa_bool_t speed_100m_fdx;   /**< 100Mbps, full duplex */
    mepa_bool_t speed_1g_fdx;     /**< 1000Mpbs, full duplex */
    mepa_bool_t speed_1g_hdx;     /**< 1000Mpbs, full duplex */
    mepa_bool_t tx_remote_fault;  /**< Local Application fault indication for Link Partner */
    mepa_bool_t speed_2g5_fdx;    /**< 2500Mpbs, full duplex */
    mepa_bool_t speed_5g_fdx;     /**< 5GE, full duplex */
    mepa_bool_t speed_10g_fdx;    /**< 10GE, full duplex */
    mepa_bool_t no_restart_aneg;  /**< Do not restart aneg */
} mepa_aneg_adv_t;

/** \brief MAC Address */
typedef struct
{
    uint8_t addr[6];   /**< Network byte order */
} mepa_mac_t;

/** \brief Cable diagnostics result */
typedef struct {
    mesa_bool_t               link;      /**< Link status */
    mepa_cable_diag_status_t  status[4]; /**< Status, pair A-D (0-3) */
    uint8_t                   length[4]; /**< Length (meters), pair A-D (0-3) */
} mepa_cable_diag_result_t;

/** \brief phy reset points */
typedef enum {
    MEPA_RESET_POINT_DEFAULT = 0,
    MEPA_RESET_POINT_PRE,
    MEPA_RESET_POINT_POST,
    MEPA_RESET_POINT_POST_MAC
} mepa_reset_point_t;

typedef struct {
    mepa_media_interface_t media_intf;
    mepa_reset_point_t     reset_point;
    mepa_bool_t            framepreempt_en;      // default is disable(0)
} mepa_reset_param_t;

/** \brief Represents the status of the PHY. */
typedef struct {
    mepa_bool_t link;        /**< Link is up */
    mepa_port_speed_t speed; /**< Speed */
    mepa_bool_t fdx;         /**< Full duplex */
    mepa_aneg_t aneg;        /**< Auto-negotiation */
    mepa_bool_t copper;      /**< For dual-media ports */
    mepa_bool_t fiber;       /**< For dual-media ports */
} mepa_status_t;

/** \brief manual negotiation preferred state */
typedef enum {
    MEPA_MANUAL_NEG_DISABLED = 0, /**< Disable manual preference of master/slave states in IEEE registers 9,10 for 1G speed */
    MEPA_MANUAL_NEG_REF,          /**< master state used in IEEE registers 9,10 for 1G speed */
    MEPA_MANUAL_NEG_CLIENT        /**< slave  state used in IEEE registers 9,10 for 1G speed */
} mepa_manual_neg_t;

/** \brief preferred Media Mode MDI/MDIX/AUTO */
typedef enum {
    MEPA_MEDIA_MODE_AUTO = 0, /**< AMDIX */
    MEPA_MEDIA_MODE_MDI,      /**< MDI */
    MEPA_MEDIA_MODE_MDIX,     /**< MDIX */
} mepa_media_mode_t;

/** \brief preferref Force Media AMS Select */
typedef enum {
    MEPA_PHY_MEDIA_FORCE_AMS_SEL_NORMAL = 0, /**< Force AMS Override to Force Selection - Normal */
    MEPA_PHY_MEDIA_FORCE_AMS_SEL_SERDES,     /**< Force AMS Override to Force Selection - SerDes Media */
    MEPA_PHY_MEDIA_FORCE_AMS_SEL_COPPER,     /**< Force AMS Override to Force Selection - Copper Media */
} mepa_phy_media_force_ams_sel_t;

/** \brief Represents the configuration that is applied to PHY. */
typedef struct {
    mepa_port_speed_t speed;       /**< Forced port speed */
    mepa_bool_t fdx;               /**< Forced duplex mode */
    mepa_bool_t flow_control;      /**< Flow control (Standard 802.3x) */
    uint32_t adv_dis;              /**< Auto neg advertisement disable */
    mepa_port_admin_state_t admin; /**< Admin state */
    mepa_aneg_adv_t aneg;          /**< Auto-negitiation advertisement */
    mepa_bool_t mac_if_aneg_ena;   /**< Enable auto-negotiation on host mac interface */
    mepa_manual_neg_t man_neg;     /**< manual negotiation control in 1G instead of using auto-negotiation */
    mepa_media_mode_t mdi_mode;    /**< Preferred media mode */
    mepa_phy_media_force_ams_sel_t force_ams_mode_sel; /**< Force AMS Media Select */
} mepa_conf_t;

/** \brief  MEPA event mask */
typedef uint32_t mepa_event_t;


/* mepa_rc error codes */
#define MEPA_RC_OK                              MESA_RC_OK
#define MEPA_RC_ERROR                           MESA_RC_ERROR
#define MEPA_RC_INV_STATE                       MESA_RC_INV_STATE
#define MEPA_RC_INCOMPLETE                      MESA_RC_INCOMPLETE
#define MEPA_RC_NOT_IMPLEMENTED                 MESA_RC_NOT_IMPLEMENTED
#define MEPA_RC_ERR_PARM                        MESA_RC_ERR_PARM
#define MEPA_RC_ERR_NO_RES                      MESA_RC_ERR_NO_RES
#define MEPA_RC_ERR_KR_CONF_NOT_SUPPORTED       MESA_RC_ERR_KR_CONF_NOT_SUPPORTED
#define MEPA_RC_ERR_KR_CONF_INVALID_PARAMETER   MESA_RC_ERR_KR_CONF_INVALID_PARAMETER

#define MEPA_RC_ERR_TS_ENG_MAP                  -201 /**< Input flow index could not be converted to appropriate Engine id */
#define MEPA_RC_ERR_TS_ENG_INIT                 -202 /**< Engine init configuration error */
#define MEPA_RC_ERR_TS_ENG_ENCAP_OVERWRITE      -203 /**< Engine already has encapsulation configured on it. */
#define MEPA_RC_ERR_TS_ENG_INVALID_CLOCK        -204 /**< Invalid clock id for engine which contains the flow. */
#define MEPA_RC_ERR_TS_INVALID_ENCAP            -205 /**< Invalid encapsulation id */
#define MEPA_RC_ERR_TS_ENG_COMM_OVERWRITE       -206 /**< Engine common configuration options cannot be overwritten. */
#define MEPA_RC_ERR_TS_FLOW_CONF                -207 /**< Error in setting underlying engine's flow configuration */
#define MEPA_RC_ERR_TS_ACTION_IN_USE            -208 /**< Action in use by other port sharing the engine */
#define MEPA_RC_ERR_TS_ACTION_GET_FAIL          -209 /**< Failed to get the action information */
#define MEPA_RC_ERR_TS_FLOW_GET_FAIL            -210 /**< Error in obtaining underlying engine's flow configuration */
#define MEPA_RC_ERR_TS_ENG_CLR                  -211 /**< Error in clearing the engine configuration */


typedef enum {
    MEPA_TRACE_LVL_RACKET  = 1,
    MEPA_TRACE_LVL_NOISE   = 2,
    MEPA_TRACE_LVL_DEBUG   = 4,
    MEPA_TRACE_LVL_INFO    = 6,
    MEPA_TRACE_LVL_WARNING = 8,
    MEPA_TRACE_LVL_ERROR   = 9,
    MEPA_TRACE_LVL_NONE    = 10,
} mepa_trace_level_t;

/** \brief GPIO modes */
typedef enum {
    MEPA_GPIO_MODE_NONE = 0,
    MEPA_GPIO_MODE_IN,
    MEPA_GPIO_MODE_OUT,
    MEPA_GPIO_MODE_ALT,
    MEPA_GPIO_MODE_LED_LINK_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK1000_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK100_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK10_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK100_1000_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK10_1000_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK10_100_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK100BASE_FX_1000BASE_X_ACTIVITY,
    MEPA_GPIO_MODE_LED_DUPLEX_COLLISION,
    MEPA_GPIO_MODE_LED_COLLISION,
    MEPA_GPIO_MODE_LED_ACTIVITY,
    MEPA_GPIO_MODE_LED_BASE100_FX_1000BASE_X_FIBER_ACTIVITY,
    MEPA_GPIO_MODE_LED_AUTONEGOTIATION_FAULT,
    MEPA_GPIO_MODE_LED_LINK1000BASE_X_ACTIVITY,
    MEPA_GPIO_MODE_LED_LINK100BASE_FX_ACTIVITY,
    MEPA_GPIO_MODE_LED_BASE1000_ACTIVITY,
    MEPA_GPIO_MODE_LED_BASE100_FX_ACTIVITY,
    MEPA_GPIO_MODE_LED_FORCE_LED_OFF,
    MEPA_GPIO_MODE_LED_FORCE_LED_ON,
    MEPA_GPIO_MODE_LED_FAST_LINK_FAIL,
    MEPA_GPIO_MODE_LED_LINK_TX,
    MEPA_GPIO_MODE_LED_LINK_RX,
    MEPA_GPIO_MODE_LED_LINK_FAULT,
    MEPA_GPIO_MODE_LED_DISABLE_EXTENDED,
    MEPA_GPIO_MODE_RCVRD_CLK_OUT1,
    MEPA_GPIO_MODE_RCVRD_CLK_OUT2,
} mepa_gpio_mode_t;

/** \brief Led id */
typedef enum {
    MEPA_LED0 = 0,
    MEPA_LED1
} mepa_led_num_t;

/** \brief Additional GPIO data used while setting gpio mode */
typedef struct {
    uint8_t gpio_no;
    mepa_led_num_t led_num;
    mepa_gpio_mode_t mode;
} mepa_gpio_conf_t;

/** \brief SOF Preemption mode */
typedef enum {
    MEPA_PREEMPTION_NORMAL_SFD = 0,
    MEPA_PREEMPTION_SMD_E,
    MEPA_PREEMPTION_SMD_EXCEPT_CONTINUOUS,
    MEPA_PREEMPTION_SMD_ALL,
} mepa_preemption_mode_t;

/** \brief SOF data */
typedef struct {
    uint8_t sof_no;
    mepa_bool_t ingress;
    mepa_preemption_mode_t sof_preemption_mode;
} mepa_start_of_frame_conf_t;

/**< Loopback types */
typedef struct {
    mepa_bool_t far_end_ena;    /**< far end loopback where traffic is looped back towards link partner from pcs. */
    mepa_bool_t near_end_ena;   /**< Near end loopback where traffic is looped back towards Mac from pcs. */
    mepa_bool_t connector_ena;  /**< connector loopback where traffic is looped back towards Mac uing external connector. */
    mepa_bool_t mac_serdes_input_ena;   /**< Mac side serdes input loopback where traffic is looped towards link partner. */
    mepa_bool_t mac_serdes_facility_ena;/**< Mac side serdes facility loopback where traffic is looped towards link partner. */
    mepa_bool_t mac_serdes_equip_ena;   /**< Mac side serdes equipment loopback where traffic is looped towards Mac. */
    mepa_bool_t media_serdes_input_ena; /**< Media side serdes input loopback where traffic is looped towards Mac. */
    mepa_bool_t media_serdes_facility_ena; /**< Media side serdes facility loopback where traffic is looped towards link partner. */
    mepa_bool_t media_serdes_equip_ena; /**< Media side serdes equipment loopback where traffic is looped back towards link partner. */
    mepa_bool_t qsgmii_pcs_tbi_ena;  /**< QSGMII tbi loopback where traffic is looped towards link partner from QSGMII pcs. */
    mepa_bool_t qsgmii_pcs_gmii_ena; /**< QSGMII gmi loopback where traffic is looped towards Mac from QSGMII pcs. */
    mepa_bool_t qsgmii_serdes_ena;   /**< QSGMII serdes loopback where traffic is looped towards link partner from QSGMII serdes. This would affect all the 4 ports of PHY. */
} mepa_loopback_t;

/** \brief phy clock source */
typedef enum {
    MEPA_SYNCE_CLOCK_SRC_DISABLED,
    MEPA_SYNCE_CLOCK_SRC_SERDES_MEDIA,
    MEPA_SYNCE_CLOCK_SRC_COPPER_MEDIA,
    MEPA_SYNCE_CLOCK_SRC_CLOCK_IN_1,
    MEPA_SYNCE_CLOCK_SRC_CLOCK_IN_2
} mepa_synce_clock_src_t;

/** \brief synce recovered clock */
typedef enum {
    MEPA_SYNCE_CLOCK_DST_1 = 0,
    MEPA_SYNCE_CLOCK_DST_2,
    MEPA_SYNCE_CLOCK_DST_MAX,
} mepa_synce_clock_dst_t;

/** \brief recovered clock frequencies */
typedef enum {
    MEPA_FREQ_25M,    /**< 25Mhz recovered clock */
    MEPA_FREQ_31_25M, /**< 31.25Mhz receovered clock */
    MEPA_FREQ_125M,   /**< 125Mhz recovered clock */
} mepa_freq_t;

/** \brief Synce recovered clock configuration */
typedef struct {
    mepa_synce_clock_src_t src; /**< source type */
    mepa_synce_clock_dst_t dst; /**< recovered clock number */
    mepa_freq_t            freq;/**< recovered clock frequency */
} mepa_synce_clock_conf_t;

/** \brief mepa trace groups */
typedef enum {
    MEPA_TRACE_GRP_GEN,   /**< PHY general features */
    MEPA_TRACE_GRP_TS,    /**< Timestamp Api */
} mepa_trace_group_t;

typedef struct {
    mepa_trace_group_t  group;
    mepa_trace_level_t  level;
    const char         *location;
    uint32_t            line;
    const char         *format;
} mepa_trace_data_t;

/** \brief lock structure */
typedef struct {
    const char *function;  /**< function name */
    const char *file;      /**< file name */
    int        line;       /**< line number */
} mepa_lock_t;

/** \brief PHY type */
typedef enum {
    MEPA_CAP_SPEED_MASK_1G = 0x1,  /**< PHY supports maximum speed of 1G. */
    MEPA_CAP_SPEED_MASK_2G5 = 0x40,/**< PHY supports maximum speed of 2G5. */
    MEPA_CAP_SPEED_MASK_10G = 0x2, /**< PHY supports maximum speed of 10G. */
    MEPA_CAP_TS_MASK_GEN_1 = 0x4,  /**< PHY supports timestamping capability of GEN-1 devices such as vsc8574. */
    MEPA_CAP_TS_MASK_GEN_2 = 0x8,  /**< PHY supports timestamping capability of GEN-2 devices such as vsc8584, vsc8490. */
    MEPA_CAP_TS_MASK_GEN_3 = 0x10, /**< PHY supports timestamping capability of GEN-3 devices such as Lan8814. */
    MEPA_CAP_TS_MASK_NONE  = 0x20, /**< PHY does not support timestamping capability. */
} mepa_phy_cap_t;

/** \brief phy info
 *  vsc-phy note: In VSC-phys such as vsc8574, base port and alternate port pairs like {0,2} and {1,3} share the same 1588 engine. Suppose {0,2} is the timestamping po     rt pair.
 *  Port '0' is the base port and Port '2' is the alternate port. */
typedef struct {
    uint16_t             part_number;     /**< Part number */
    uint16_t             revision;        /**< Chip revision. */
    mepa_phy_cap_t       cap;             /**< PHY capability 1G or 10G phy. */
    mepa_port_no_t       ts_base_port;    /**< Timestamping base port number. VSC-phys like vsc8574 have 2 different timestamping base ports 0 and 1 in a phy. See note above. */
} mepa_phy_info_t;

/** \brief Debug layer */
typedef enum {
    MEPA_DEBUG_LAYER_ALL, /**< All layers */
    MEPA_DEBUG_LAYER_AIL, /**< Application Interface Layer */
    MEPA_DEBUG_LAYER_CIL  /**< Chip Interface Layer */
} mepa_debug_layer_t;

 /** \brief Debug function group */
typedef enum {
    MEPA_DEBUG_GROUP_ALL    ,    /**< All groups */
    MEPA_DEBUG_GROUP_PHY    ,    /**< PHY */
    MEPA_DEBUG_GROUP_PHY_TS ,    /**< PHY_TS: PHY TimeStamping */
    MEPA_DEBUG_GROUP_MACSEC ,    /**< 802.1AE MacSec */

    /* New groups are added above this line */
    MEPA_DEBUG_GROUP_COUNT      /**< Number of groups */
} mepa_debug_group_t;

/** \brief Debug information structure */
typedef struct {
    mepa_debug_layer_t layer;       /**< Layer */
    mepa_debug_group_t group;       /**< Function group */
    mepa_bool_t        full;        /**< Full information dump */
    mepa_bool_t        clear;       /**< Clear counters */
    mepa_bool_t        vml_format;  /**< VML format register dump */
} mepa_debug_info_t;

/** \brief self-test information structure */
typedef struct {
    mepa_port_speed_t	speed;
    mepa_media_mode_t	mdi;
    uint32_t		frames;
    uint32_t		good_cnt;
    uint32_t		err_cnt;
} mepa_selftest_info_t;

/** \brief PRBS information */
typedef enum {
    MEPA_PHY_DIRECTION_HOST, /**< To configure HOST PRBS */
    MEPA_PHY_DIRECTION_LINE, /**< To configure LINE PRBS */
    MEPA_PHY_DIRECTION_CNT,  /**< ENUM Count             */
} mepa_phy_prbs_direction_t;

/** \brief PRBS information */
typedef enum {
    MEPA_PHY_PRBS_TYPE_SERDES, /**< Configure SERDES prbs */
    MEPA_PHY_PRBS_TYPE_PCS,    /**< Configure PCS prbs    */
    MEPA_PHY_PRBS_TYPE_CNT,    /**< ENUM Count            */
} mepa_phy_prbs_type_t;

/** \brief PRBS mode */
typedef enum {
    MEPA_PRBS7, /**< PRBS mode 7 */
    MEPA_PRBS15,/**< PRBS mode 15 */
    MEPA_PRBS31,/**< PRBS mode 31 */
}mepa_prbs_pattern_t;

/** \brief PRBS clock */
typedef enum {
    MEPA_PRBS_CLK25_MHZ, /**< Clock 25MHz */
    MEPA_PRBS_CLK125_MHZ,/**< Clock 125MHz */
} mepa_prbs_clock_t;

/** \brief PRBS Loopback */
typedef enum {
    MEPA_PRBS_INTERNAL_LOOPBACK, /**< Internal loopback for PRBS */
    MEPA_PRBS_EXTERNAL_LOOPBACK, /**< External loopback for PRBS */
} mepa_prbs_loopback_t;

/** \brief PRBS Information */
typedef struct {
    mepa_bool_t enable;            /**< Enabling PRBS */
    mepa_prbs_pattern_t prbsn_sel; /**< PRBS mode selection */
    mepa_prbs_clock_t clk;         /**< Clock selection */
    mepa_prbs_loopback_t loopback; /**< Loopback selection */
} mepa_phy_prbs_generator_conf_t;

/** \brief PRBS Error Information */
typedef struct {
    mepa_prbs_pattern_t  prbsn_sel; /**< PRBS mode selection */
    uint32_t no_of_errors;          /**< Error Generation */
} mepa_phy_prbs_monitor_conf_t;

#include <microchip/ethernet/hdr_end.h>  /**< ALL INCLUDE ABOVE THIS LINE */
#endif /**< _MICROCHIP_ETHERNET_PHY_API_TYPES_H_ */
:@byteposiq:	@str"2#ifndef _MICROCHIP_ETHERNET_PHY_API_TYPES_H_
:@line_cacheo:Parslet::Source::LineCache:@line_endse:!Parslet::Source::RangeSearch[×iPipiqiiÆiÇiîi=i>iWiXioipi®iÂiÃiüii:i;iiÔi#iPihiiii«iÒii.iiiiÅiòiiDiui¦i×ii9ifii¾iúi3iciii iÇiÖii\i©iêi)	im	i°	iï	i/
iw
i
iÒ
ii5iOiiÙi"i4i5i6iPii®iÛii3i4iminiiºiæii>ikilimiiÔiiYiiâi'ili±iöi;iiÅi
iOiPiiiiÇiÈiùi
iHiiÅiiDiiâi"i]ii×iêiëiiiiHiViWi~iiÌiieiii¡i°iÒiìii%i;i<iMitiiæiüiýi-i>iniiÊi i:itiii·iÆiEi¥iiiiLi[ii±iÜiñiòi!i0iiþihiiiÎißiiZi¤iîi% io iÈ i6!iv!iÌ!iÛ!iÜ!iû!i"i"i"i6"iq"i¯"iñ"i4#i|#i½#i $iR$i¨$i©$i'%i%iô%if&i¼&i4'i©'i(iw(iî(iV)iW)iX)ig)i)i§)iÇ)iç)i*i'*iH*i^*i_*ix*i*i¤*i»*iÓ*ië*i+i;+id+i+iº+iç+i,iN,iw,i,iº,i÷,i%-iU-i-i¯-iÛ-i.i&.iM.im.i.i°.iÙ.iü.i/i3/i4/iI/iX/ik/iy/i/i/iÌ/iÝ/iò/i0i)0i=0i>0i`0io0i0i®0iÙ0iö0i1i1i(1i91iM1if1i1i´1iµ1iÌ1iÝ1iR2i¿2i<3i¹3i94i±4i'5i¬5i46i³6i)7iØ7ië7iì7i8i8i=8id8i8i°8iÔ8iî8iï8i9i"9iB9i^9i|9i9i9iÁ9iÐ9i:i<:iq:i:i:i³:iÄ:iø:i7;iy;i;i;iµ;iÄ;iû;i+<iA<iB<iS<ir<i<i³<iÑ<iñ<i=i=i$=i5=if=i=iÂ=iÑ=iÒ=ié=iø=iE>i>iá>iS?iÎ?i@@i@i«@i¬@iÀ@iuAiºAiËAi	BiJBiBiLCi_Ci`CizCiCi¶CiôCi+DiADiBDifDiuDi©DiÖDiEiPEiQEiEi¹EiÏEiÐEiúEiFi=FixFiºFiõFi:GiOGiPGi~GiGi¬GiÇGiÝGiõGiHi$Hi%HiDHiSHiHiËHiIi$Ii%IiDIiSIiIiÍIi
Ji"Ji#Ji;JiJJinJiJi¸JiÎJiÏJièJi÷Ji$KiRKigKihKiKiKi×KiLi3Li4LiSLidLiLiÜLiMiUMiwMixMiMi®MiîMi+NiKNiLNiNiÍN:@last_line_endiÍN{;o;;o;	;
@
;i;"3#define _MICROCHIP_ETHERNET_PHY_API_TYPES_H_

;@{;o;;o;	;
@
;iÇ;",#include <microchip/ethernet/common.h>
;@{;o;;o;	;
@
;iî;"U#include <microchip/ethernet/hdr_start.h>  /**< ALL INCLUDE ABOVE THIS LINE */

;@{
:keywordo;;o;	;
@
;i;"typedef;@:type_aliaso;;o;	;
@
;i;"struct mepa_device ;@:typedef_nameo;;o;	;
@
;i+;"mepa_device_t;@:
array[ :cap0{;o;;o;	;
@
;iP;"#define MEPA_SHARED_PTR

;@{
;o;;o;	;
@
;ii;"typedef;@;o;;o;	;
@
;iq;"mesa_aneg_t ;@;o;;o;	;
@
;i};"mepa_aneg_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i;"mesa_bool_t ;@;o;;o;	;
@
;i;"mepa_bool_t;@;[ ;0{
;o;;o;	;
@
;i«;"typedef;@;o;;o;	;
@
;i³;"mesa_chip_no_t ;@;o;;o;	;
@
;iÂ;"mepa_chip_no_t;@;[ ;0{
;o;;o;	;
@
;iÒ;"typedef;@;o;;o;	;
@
;iÚ;"mesa_fiber_port_speed_t ;@;o;;o;	;
@
;iò;"mepa_fiber_port_speed_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i;"mesa_phy_mdi_t ;@;o;;o;	;
@
;i";"mepa_mdi_t;@;[ ;0{
;o;;o;	;
@
;i.;"typedef;@;o;;o;	;
@
;i6;" mesa_phy_media_interface_t ;@;o;;o;	;
@
;iQ;"mepa_media_interface_t;@;[ ;0{
;o;;o;	;
@
;ii;"typedef;@;o;;o;	;
@
;iq;"mesa_port_interface_t ;@;o;;o;	;
@
;i;"mepa_port_interface_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i¦;"mesa_port_no_t ;@;o;;o;	;
@
;iµ;"mepa_port_no_t;@;[ ;0{
;o;;o;	;
@
;iÅ;"typedef;@;o;;o;	;
@
;iÍ;"mesa_port_speed_t ;@;o;;o;	;
@
;iß;"mepa_port_speed_t;@;[ ;0{
;o;;o;	;
@
;iò;"typedef;@;o;;o;	;
@
;iú;"mesa_rc ;@;o;;o;	;
@
;i;"mepa_rc;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i;"mesa_sd10g_media_type_t ;@;o;;o;	;
@
;i+;"mepa_sd10g_media_type_t;@;[ ;0{
;o;;o;	;
@
;iD;"typedef;@;o;;o;	;
@
;iL;"mesa_phy_power_mode_t ;@;o;;o;	;
@
;ib;"mepa_power_mode_t;@;[ ;0{
;o;;o;	;
@
;iu;"typedef;@;o;;o;	;
@
;i};"mesa_phy_status_1g_t ;@;o;;o;	;
@
;i;"mepa_aneg_status_t;@;[ ;0{
;o;;o;	;
@
;i¦;"typedef;@;o;;o;	;
@
;i®;"mesa_phy_rgmii_conf_t ;@;o;;o;	;
@
;iÄ;"mepa_rgmii_conf_t;@;[ ;0{
;o;;o;	;
@
;i×;"typedef;@;o;;o;	;
@
;iß;"mesa_phy_tbi_conf_t ;@;o;;o;	;
@
;ió;"mepa_tbi_conf_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i;"mesa_phy_forced_reset_t ;@;o;;o;	;
@
;i$;"mepa_forced_reset_t;@;[ ;0{
;o;;o;	;
@
;i9;"typedef;@;o;;o;	;
@
;iA;"mesa_phy_pkt_mode_t ;@;o;;o;	;
@
;iU;"mepa_pkt_mode_t;@;[ ;0{
;o;;o;	;
@
;if;"typedef;@;o;;o;	;
@
;in;"mesa_phy_reset_conf_t ;@;o;;o;	;
@
;i;"mepa_reset_conf_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i;"mesa_phy_event_t ;@;o;;o;	;
@
;i°;"mepa_event_t;@;[ ;0{
;o;;o;	;
@
;i¾;"typedef;@;o;;o;	;
@
;iÆ;"mesa_phy_veriphy_status_t ;@;o;;o;	;
@
;ià;"mepa_cable_diag_status_t;@;[ ;0{
;o;;o;	;
@
;iú;"typedef;@;o;;o;	;
@
;i;"mesa_port_admin_state_t ;@;o;;o;	;
@
;i;"mepa_port_admin_state_t;@;[ ;0{
;o;;o;	;
@
;i3;"typedef;@;o;;o;	;
@
;i;;"mesa_debug_printf_t ;@;o;;o;	;
@
;iO;"mepa_debug_print_t;@;[ ;0{
;o;;o;	;
@
;ic;"typedef;@;o;;o;	;
@
;ik;"uint16_t ;@;o;;o;	;
@
;it;"mepa_vid_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;o;;o;	;
@
;i;"uint16_t ;@;o;;o;	;
@
;i;"mepa_etype_t;@;[ ;0{
;o;;o;	;
@
;iÇ;"typedef;@:enum_type_declare{;o;;o;	;
@
;iÏ;"	enum;@:
enums[{:	enum{	:enum_nameo;;o;	;
@
;iÚ;"MEPA_ADV_DIS_HDX ;@:operatoro;;o;	;
@
;ië;"=;@:	expro;;o;	;
@
;ií;"0x00000001;@;0{;{	;o;;o;	;
@
;i;"MEPA_ADV_DIS_FDX ;@;o;;o;	;
@
;i.;"=;@;o;;o;	;
@
;i0;"0x00000002;@;0{;{	;o;;o;	;
@
;i`;"MEPA_ADV_UP_MEP_LOOP ;@;o;;o;	;
@
;iu;"=;@;o;;o;	;
@
;iw;"0x00000004;@;0{;{	;o;;o;	;
@
;i­;"MEPA_ADV_DIS_2500M ;@;o;;o;	;
@
;iÀ;"=;@;o;;o;	;
@
;iÂ;"0x00000008;@;0{;{	;o;;o;	;
@
;iî;"MEPA_ADV_DIS_1G ;@;o;;o;	;
@
;iþ;"=;@;o;;o;	;
@
;i 	;"0x00000010;@;0{;{	;o;;o;	;
@
;i-	;"MEPA_ADV_DIS_100M ;@;o;;o;	;
@
;i?	;"=;@;o;;o;	;
@
;iA	;"0x00000040;@;0{;{	;o;;o;	;
@
;iq	;"MEPA_ADV_DIS_10M ;@;o;;o;	;
@
;i	;"=;@;o;;o;	;
@
;i	;"0x00000080;@;0{;{	;o;;o;	;
@
;i´	;"MEPA_ADV_DIS_5G ;@;o;;o;	;
@
;iÄ	;"=;@;o;;o;	;
@
;iÆ	;"0x00000100;@;0{;{	;o;;o;	;
@
;ió	;"MEPA_ADV_DIS_10G ;@;o;;o;	;
@
;i
;"=;@;o;;o;	;
@
;i
;"0x00000200;@;0{;{	;o;;o;	;
@
;i3
;"MEPA_ADV_DIS_RESTART_ANEG ;@;o;;o;	;
@
;iM
;"=;@;o;;o;	;
@
;iO
;"0x00000400;@;0{;{	;o;;o;	;
@
;i{
;"MEPA_ADV_DIS_SPEED ;@;o;;o;	;
@
;i
;"=;@;o;;o;	;
@
;i
;"(MEPA_ADV_DIS_10M | MEPA_ADV_DIS_100M | MEPA_ADV_DIS_1G |
         MEPA_ADV_DIS_2500M | MEPA_ADV_DIS_5G |
         MEPA_ADV_DIS_10G);@;0{;{	;o;;o;	;
@
;i9;"MEPA_ADV_DIS_DUPLEX ;@;o;;o;	;
@
;iM;"=;@;o;;o;	;
@
;iW;"*(MEPA_ADV_DIS_HDX | MEPA_ADV_DIS_FDX);@;0{;{	;o;;o;	;
@
;i;"MEPA_ADV_DIS_ALL ;@;o;;o;	;
@
;i«;"=;@;o;;o;	;
@
;i­;"c(MEPA_ADV_DIS_SPEED | MEPA_ADV_DIS_DUPLEX |
                            MEPA_ADV_UP_MEP_LOOP) ;@;0;o;;o;	;
@
;i$;"mepa_adv_dis_t;@;[ ;0{;o;;o;	;
@
;iP;"7#define MEPA_SPEED_UNDEFINED MESA_SPEED_UNDEFINED
;@{;o;;o;	;
@
;i;"1#define MEPA_SPEED_10M       MESA_SPEED_10M
;@{;o;;o;	;
@
;i®;"2#define MEPA_SPEED_100M      MESA_SPEED_100M
;@{;o;;o;	;
@
;iÛ;"0#define MEPA_SPEED_1G        MESA_SPEED_1G
;@{;o;;o;	;
@
;i;"3#define MEPA_SPEED_AUTO      MESA_SPEED_AUTO

;@{
;o;;o;	;
@
;i4;"typedef;@;o;;o;	;
@
;i<;"mesa_port_admin_state_t ;@;o;;o;	;
@
;iT;"mepa_port_admin_state_t;@;[ ;0{;o;;o;	;
@
;i;"7#define MEPA_SPEED_UNDEFINED MESA_SPEED_UNDEFINED
;@{;o;;o;	;
@
;iº;"1#define MEPA_SPEED_10M       MESA_SPEED_10M
;@{;o;;o;	;
@
;iæ;"2#define MEPA_SPEED_100M      MESA_SPEED_100M
;@{;o;;o;	;
@
;i;"0#define MEPA_SPEED_1G        MESA_SPEED_1G
;@{;o;;o;	;
@
;i>;"4#define MEPA_SPEED_AUTO      MESA_SPEED_AUTO


;@{;o;;o;	;
@
;i;"E#define MEPA_CABLE_DIAG_STATUS_OK        MESA_VERIPHY_STATUS_OK
;@{;o;;o;	;
@
;iÔ;"G#define MEPA_CABLE_DIAG_STATUS_OPEN      MESA_VERIPHY_STATUS_OPEN
;@{;o;;o;	;
@
;i;"H#define MEPA_CABLE_DIAG_STATUS_SHORT     MESA_VERIPHY_STATUS_SHORT
;@{;o;;o;	;
@
;iY;"I#define MEPA_CABLE_DIAG_STATUS_ABNORM    MESA_VERIPHY_STATUS_ABNORM
;@{;o;;o;	;
@
;i;"J#define MEPA_CABLE_DIAG_STATUS_SHORT_A   MESA_VERIPHY_STATUS_SHORT_A
;@{;o;;o;	;
@
;iâ;"J#define MEPA_CABLE_DIAG_STATUS_SHORT_B   MESA_VERIPHY_STATUS_SHORT_B
;@{;o;;o;	;
@
;i';"J#define MEPA_CABLE_DIAG_STATUS_SHORT_C   MESA_VERIPHY_STATUS_SHORT_C
;@{;o;;o;	;
@
;il;"J#define MEPA_CABLE_DIAG_STATUS_SHORT_D   MESA_VERIPHY_STATUS_SHORT_D
;@{;o;;o;	;
@
;i±;"J#define MEPA_CABLE_DIAG_STATUS_COUPL_A   MESA_VERIPHY_STATUS_COUPL_A
;@{;o;;o;	;
@
;iö;"J#define MEPA_CABLE_DIAG_STATUS_COUPL_B   MESA_VERIPHY_STATUS_COUPL_B
;@{;o;;o;	;
@
;i;;"J#define MEPA_CABLE_DIAG_STATUS_COUPL_C   MESA_VERIPHY_STATUS_COUPL_C
;@{;o;;o;	;
@
;i;"J#define MEPA_CABLE_DIAG_STATUS_COUPL_D   MESA_VERIPHY_STATUS_COUPL_D
;@{;o;;o;	;
@
;iÅ;"J#define MEPA_CABLE_DIAG_STATUS_UNKNOWN   MESA_VERIPHY_STATUS_UNKNOWN
;@{;o;;o;	;
@
;i
;"K#define MEPA_CABLE_DIAG_STATUS_RUNNING   MESA_VERIPHY_STATUS_RUNNING

;@{;o;;o;	;
@
;ii;"0#define MEPA_LINK_LOS MESA_PHY_LINK_LOS_EV
;@{;o;;o;	;
@
;i;"9#define MEPA_FAST_LINK_FAIL MESA_PHY_LINK_FFAIL_EV

;@{
;o;;o;	;
@
;iù;"typedef;@:struct_type_declare{:struct_members[{:member{:normal{	:	typeo;;o;	;
@
;i;"mepa_bool_t ;@:	nameo;;o;	;
@
;i;"speed_10m_hdx;@;[ ;0{;{; {	;!o;;o;	;
@
;iL;"mepa_bool_t ;@;"o;;o;	;
@
;iX;"speed_10m_fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;i;"mepa_bool_t ;@;"o;;o;	;
@
;i;"speed_100m_hdx;@;[ ;0{;{; {	;!o;;o;	;
@
;iÉ;"mepa_bool_t ;@;"o;;o;	;
@
;iÕ;"speed_100m_fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;i;"mepa_bool_t ;@;"o;;o;	;
@
;i;"speed_1g_fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;iH;"mepa_bool_t ;@;"o;;o;	;
@
;iT;"speed_1g_hdx;@;[ ;0{;{; {	;!o;;o;	;
@
;i;"mepa_bool_t ;@;"o;;o;	;
@
;i;"tx_remote_fault;@;[ ;0{;{; {	;!o;;o;	;
@
;iæ;"mepa_bool_t ;@;"o;;o;	;
@
;iò;"speed_2g5_fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;i&;"mepa_bool_t ;@;"o;;o;	;
@
;i2;"speed_5g_fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;ia;"mepa_bool_t ;@;"o;;o;	;
@
;im;"speed_10g_fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;i;"mepa_bool_t ;@;"o;;o;	;
@
;i©;"no_restart_aneg;@;[ ;0;o;;o;	;
@
;iÙ;"mepa_aneg_adv_t;@;[ ;0{
;o;;o;	;
@
;i;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;i;"uint8_t ;@;"o;;o;	;
@
;i";"	addr;@;[{;o;;o;	;
@
;i';"6;@;0;o;;o;	;
@
;iJ;"mepa_mac_t;@;[ ;0{
;o;;o;	;
@
;i~;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;i;"mesa_bool_t               ;@;"o;;o;	;
@
;i­;"	link;@;[ ;0{;{; {	;!o;;o;	;
@
;iÐ;"mepa_cable_diag_status_t  ;@;"o;;o;	;
@
;iê;"status;@;[{;o;;o;	;
@
;iñ;"4;@;0{;{; {	;!o;;o;	;
@
;i;"uint8_t                   ;@;"o;;o;	;
@
;i2;"length;@;[{;o;;o;	;
@
;i9;"4;@;0;o;;o;	;
@
;ig;"mepa_cable_diag_result_t;@;[ ;0{
;o;;o;	;
@
;i¡;"typedef;@;{;o;;o;	;
@
;i©;"	enum;@;[	{;{	;o;;o;	;
@
;i´;"MEPA_RESET_POINT_DEFAULT ;@;o;;o;	;
@
;iÍ;"=;@;o;;o;	;
@
;iÏ;"0;@;0{;{;o;;o;	;
@
;iÖ;"MEPA_RESET_POINT_PRE;@;0{;{;o;;o;	;
@
;ið;"MEPA_RESET_POINT_POST;@;0{;{;o;;o;	;
@
;i;"MEPA_RESET_POINT_POST_MAC
;@;0;o;;o;	;
@
;i';"mepa_reset_point_t;@;[ ;0{
;o;;o;	;
@
;i<;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;iQ;"mepa_media_interface_t ;@;"o;;o;	;
@
;ih;"media_intf;@;[ ;0{;{; {	;!o;;o;	;
@
;ix;"mepa_reset_point_t     ;@;"o;;o;	;
@
;i;"reset_point;@;[ ;0{;{; {	;!o;;o;	;
@
;i ;"mepa_bool_t            ;@;"o;;o;	;
@
;i·;"framepreempt_en;@;[ ;0;o;;o;	;
@
;iè;"mepa_reset_param_t;@;[ ;0{
;o;;o;	;
@
;i-;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;iB;"mepa_bool_t ;@;"o;;o;	;
@
;iN;"	link;@;[ ;0{;{; {	;!o;;o;	;
@
;ir;"mepa_port_speed_t ;@;"o;;o;	;
@
;i;"
speed;@;[ ;0{;{; {	;!o;;o;	;
@
;i;"mepa_bool_t ;@;"o;;o;	;
@
;i©;"fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;iÎ;"mepa_aneg_t ;@;"o;;o;	;
@
;iÚ;"	aneg;@;[ ;0{;{; {	;!o;;o;	;
@
;i;"mepa_bool_t ;@;"o;;o;	;
@
;i;"copper;@;[ ;0{;{; {	;!o;;o;	;
@
;i>;"mepa_bool_t ;@;"o;;o;	;
@
;iJ;"
fiber;@;[ ;0;o;;o;	;
@
;iv;"mepa_status_t;@;[ ;0{
;o;;o;	;
@
;i·;"typedef;@;{;o;;o;	;
@
;i¿;"	enum;@;[{;{	;o;;o;	;
@
;iÊ;"MEPA_MANUAL_NEG_DISABLED ;@;o;;o;	;
@
;iã;"=;@;o;;o;	;
@
;iå;"0;@;0{;{;o;;o;	;
@
;iI;"MEPA_MANUAL_NEG_REF;@;0{;{;o;;o;	;
@
;i©;"#MEPA_MANUAL_NEG_CLIENT        ;@;0;o;;o;	;
@
;i;"mepa_manual_neg_t;@;[ ;0{
;o;;o;	;
@
;iL;"typedef;@;{;o;;o;	;
@
;iT;"	enum;@;[{;{	;o;;o;	;
@
;i_;"MEPA_MEDIA_MODE_AUTO ;@;o;;o;	;
@
;it;"=;@;o;;o;	;
@
;iv;"0;@;0{;{;o;;o;	;
@
;i;"MEPA_MEDIA_MODE_MDI;@;0{;{;o;;o;	;
@
;iµ;"MEPA_MEDIA_MODE_MDIX;@;0;o;;o;	;
@
;iÞ;"mepa_media_mode_t;@;[ ;0{
;o;;o;	;
@
;i!;"typedef;@;{;o;;o;	;
@
;i);"	enum;@;[{;{	;o;;o;	;
@
;i4;")MEPA_PHY_MEDIA_FORCE_AMS_SEL_NORMAL ;@;o;;o;	;
@
;iX;"=;@;o;;o;	;
@
;iZ;"0;@;0{;{;o;;o;	;
@
;i;"(MEPA_PHY_MEDIA_FORCE_AMS_SEL_SERDES;@;0{;{;o;;o;	;
@
;i;"(MEPA_PHY_MEDIA_FORCE_AMS_SEL_COPPER;@;0;o;;o;	;
@
;ij;"#mepa_phy_media_force_ams_sel_t;@;[ ;0{
;o;;o;	;
@
;iÎ;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;iã;"mepa_port_speed_t ;@;"o;;o;	;
@
;iõ;"
speed;@;[ ;0{;{; {	;!o;;o;	;
@
;i ;"mepa_bool_t ;@;"o;;o;	;
@
;i,;"fdx;@;[ ;0{;{; {	;!o;;o;	;
@
;i^;"mepa_bool_t ;@;"o;;o;	;
@
;ij;"flow_control;@;[ ;0{;{; {	;!o;;o;	;
@
;i¨;"uint32_t ;@;"o;;o;	;
@
;i±;"adv_dis;@;[ ;0{;{; {	;!o;;o;	;
@
;iò;"mepa_port_admin_state_t ;@;"o;;o;	;
@
;i
 ;"
admin;@;[ ;0{;{; {	;!o;;o;	;
@
;i) ;"mepa_aneg_adv_t ;@;"o;;o;	;
@
;i9 ;"	aneg;@;[ ;0{;{; {	;!o;;o;	;
@
;is ;"mepa_bool_t ;@;"o;;o;	;
@
;i ;"mac_if_aneg_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;iÌ ;"mepa_manual_neg_t ;@;"o;;o;	;
@
;iÞ ;"man_neg;@;[ ;0{;{; {	;!o;;o;	;
@
;i:!;"mepa_media_mode_t ;@;"o;;o;	;
@
;iL!;"mdi_mode;@;[ ;0{;{; {	;!o;;o;	;
@
;iz!;"$mepa_phy_media_force_ams_sel_t ;@;"o;;o;	;
@
;i!;"force_ams_mode_sel;@;[ ;0;o;;o;	;
@
;iÎ!;"mepa_conf_t;@;[ ;0{
;o;;o;	;
@
;iû!;"typedef;@;o;;o;	;
@
;i";"uint32_t ;@;o;;o;	;
@
;i";"mepa_event_t;@;[ ;0{;o;;o;	;
@
;i6";"@#define MEPA_RC_OK                              MESA_RC_OK
;@{;o;;o;	;
@
;iq";"C#define MEPA_RC_ERROR                           MESA_RC_ERROR
;@{;o;;o;	;
@
;i¯";"G#define MEPA_RC_INV_STATE                       MESA_RC_INV_STATE
;@{;o;;o;	;
@
;iñ";"H#define MEPA_RC_INCOMPLETE                      MESA_RC_INCOMPLETE
;@{;o;;o;	;
@
;i4#;"M#define MEPA_RC_NOT_IMPLEMENTED                 MESA_RC_NOT_IMPLEMENTED
;@{;o;;o;	;
@
;i|#;"F#define MEPA_RC_ERR_PARM                        MESA_RC_ERR_PARM
;@{;o;;o;	;
@
;i½#;"H#define MEPA_RC_ERR_NO_RES                      MESA_RC_ERR_NO_RES
;@{;o;;o;	;
@
;i $;"W#define MEPA_RC_ERR_KR_CONF_NOT_SUPPORTED       MESA_RC_ERR_KR_CONF_NOT_SUPPORTED
;@{;o;;o;	;
@
;iR$;"\#define MEPA_RC_ERR_KR_CONF_INVALID_PARAMETER   MESA_RC_ERR_KR_CONF_INVALID_PARAMETER

;@{;o;;o;	;
@
;i©$;"~#define MEPA_RC_ERR_TS_ENG_MAP                  -201 /**< Input flow index could not be converted to appropriate Engine id */
;@{;o;;o;	;
@
;i'%;"b#define MEPA_RC_ERR_TS_ENG_INIT                 -202 /**< Engine init configuration error */
;@{;o;;o;	;
@
;i%;"u#define MEPA_RC_ERR_TS_ENG_ENCAP_OVERWRITE      -203 /**< Engine already has encapsulation configured on it. */
;@{;o;;o;	;
@
;iô%;"w#define MEPA_RC_ERR_TS_ENG_INVALID_CLOCK        -204 /**< Invalid clock id for engine which contains the flow. */
;@{;o;;o;	;
@
;if&;"[#define MEPA_RC_ERR_TS_INVALID_ENCAP            -205 /**< Invalid encapsulation id */
;@{;o;;o;	;
@
;i¼&;"}#define MEPA_RC_ERR_TS_ENG_COMM_OVERWRITE       -206 /**< Engine common configuration options cannot be overwritten. */
;@{;o;;o;	;
@
;i4';"z#define MEPA_RC_ERR_TS_FLOW_CONF                -207 /**< Error in setting underlying engine's flow configuration */
;@{;o;;o;	;
@
;i©';"q#define MEPA_RC_ERR_TS_ACTION_IN_USE            -208 /**< Action in use by other port sharing the engine */
;@{;o;;o;	;
@
;i(;"g#define MEPA_RC_ERR_TS_ACTION_GET_FAIL          -209 /**< Failed to get the action information */
;@{;o;;o;	;
@
;iw(;"|#define MEPA_RC_ERR_TS_FLOW_GET_FAIL            -210 /**< Error in obtaining underlying engine's flow configuration */
;@{;o;;o;	;
@
;iî(;"o#define MEPA_RC_ERR_TS_ENG_CLR                  -211 /**< Error in clearing the engine configuration */


;@{
;o;;o;	;
@
;iX);"typedef;@;{;o;;o;	;
@
;i`);"	enum;@;[{;{	;o;;o;	;
@
;ik);"MEPA_TRACE_LVL_RACKET  ;@;o;;o;	;
@
;i);"=;@;o;;o;	;
@
;i);"1;@;0{;{	;o;;o;	;
@
;i);"MEPA_TRACE_LVL_NOISE   ;@;o;;o;	;
@
;i¢);"=;@;o;;o;	;
@
;i¤);"2;@;0{;{	;o;;o;	;
@
;i«);"MEPA_TRACE_LVL_DEBUG   ;@;o;;o;	;
@
;iÂ);"=;@;o;;o;	;
@
;iÄ);"4;@;0{;{	;o;;o;	;
@
;iË);"MEPA_TRACE_LVL_INFO    ;@;o;;o;	;
@
;iâ);"=;@;o;;o;	;
@
;iä);"6;@;0{;{	;o;;o;	;
@
;ië);"MEPA_TRACE_LVL_WARNING ;@;o;;o;	;
@
;i*;"=;@;o;;o;	;
@
;i*;"8;@;0{;{	;o;;o;	;
@
;i*;"MEPA_TRACE_LVL_ERROR   ;@;o;;o;	;
@
;i"*;"=;@;o;;o;	;
@
;i$*;"9;@;0{;{	;o;;o;	;
@
;i+*;"MEPA_TRACE_LVL_NONE    ;@;o;;o;	;
@
;iB*;"=;@;o;;o;	;
@
;iD*;"10;@;0;o;;o;	;
@
;iJ*;"mepa_trace_level_t;@;[ ;0{
;o;;o;	;
@
;ix*;"typedef;@;{;o;;o;	;
@
;i*;"	enum;@;[#{;{	;o;;o;	;
@
;i*;"MEPA_GPIO_MODE_NONE ;@;o;;o;	;
@
;i*;"=;@;o;;o;	;
@
;i¡*;"0;@;0{;{;o;;o;	;
@
;i¨*;"MEPA_GPIO_MODE_IN;@;0{;{;o;;o;	;
@
;i¿*;"MEPA_GPIO_MODE_OUT;@;0{;{;o;;o;	;
@
;i×*;"MEPA_GPIO_MODE_ALT;@;0{;{;o;;o;	;
@
;iï*;"%MEPA_GPIO_MODE_LED_LINK_ACTIVITY;@;0{;{;o;;o;	;
@
;i+;")MEPA_GPIO_MODE_LED_LINK1000_ACTIVITY;@;0{;{;o;;o;	;
@
;i?+;"(MEPA_GPIO_MODE_LED_LINK100_ACTIVITY;@;0{;{;o;;o;	;
@
;ih+;"'MEPA_GPIO_MODE_LED_LINK10_ACTIVITY;@;0{;{;o;;o;	;
@
;i+;"-MEPA_GPIO_MODE_LED_LINK100_1000_ACTIVITY;@;0{;{;o;;o;	;
@
;i¾+;",MEPA_GPIO_MODE_LED_LINK10_1000_ACTIVITY;@;0{;{;o;;o;	;
@
;ië+;"+MEPA_GPIO_MODE_LED_LINK10_100_ACTIVITY;@;0{;{;o;;o;	;
@
;i,;":MEPA_GPIO_MODE_LED_LINK100BASE_FX_1000BASE_X_ACTIVITY;@;0{;{;o;;o;	;
@
;iR,;"(MEPA_GPIO_MODE_LED_DUPLEX_COLLISION;@;0{;{;o;;o;	;
@
;i{,;"!MEPA_GPIO_MODE_LED_COLLISION;@;0{;{;o;;o;	;
@
;i,;" MEPA_GPIO_MODE_LED_ACTIVITY;@;0{;{;o;;o;	;
@
;i¾,;"<MEPA_GPIO_MODE_LED_BASE100_FX_1000BASE_X_FIBER_ACTIVITY;@;0{;{;o;;o;	;
@
;iû,;"-MEPA_GPIO_MODE_LED_AUTONEGOTIATION_FAULT;@;0{;{;o;;o;	;
@
;i)-;"/MEPA_GPIO_MODE_LED_LINK1000BASE_X_ACTIVITY;@;0{;{;o;;o;	;
@
;iY-;"/MEPA_GPIO_MODE_LED_LINK100BASE_FX_ACTIVITY;@;0{;{;o;;o;	;
@
;i-;")MEPA_GPIO_MODE_LED_BASE1000_ACTIVITY;@;0{;{;o;;o;	;
@
;i³-;"+MEPA_GPIO_MODE_LED_BASE100_FX_ACTIVITY;@;0{;{;o;;o;	;
@
;iß-;"%MEPA_GPIO_MODE_LED_FORCE_LED_OFF;@;0{;{;o;;o;	;
@
;i.;"$MEPA_GPIO_MODE_LED_FORCE_LED_ON;@;0{;{;o;;o;	;
@
;i*.;"&MEPA_GPIO_MODE_LED_FAST_LINK_FAIL;@;0{;{;o;;o;	;
@
;iQ.;"MEPA_GPIO_MODE_LED_LINK_TX;@;0{;{;o;;o;	;
@
;iq.;"MEPA_GPIO_MODE_LED_LINK_RX;@;0{;{;o;;o;	;
@
;i.;""MEPA_GPIO_MODE_LED_LINK_FAULT;@;0{;{;o;;o;	;
@
;i´.;"(MEPA_GPIO_MODE_LED_DISABLE_EXTENDED;@;0{;{;o;;o;	;
@
;iÝ.;""MEPA_GPIO_MODE_RCVRD_CLK_OUT1;@;0{;{;o;;o;	;
@
;i /;""MEPA_GPIO_MODE_RCVRD_CLK_OUT2;@;0;o;;o;	;
@
;i!/;"mepa_gpio_mode_t;@;[ ;0{
;o;;o;	;
@
;iI/;"typedef;@;{;o;;o;	;
@
;iQ/;"	enum;@;[{;{	;o;;o;	;
@
;i\/;"MEPA_LED0 ;@;o;;o;	;
@
;if/;"=;@;o;;o;	;
@
;ih/;"0;@;0{;{;o;;o;	;
@
;io/;"MEPA_LED1
;@;0;o;;o;	;
@
;i{/;"mepa_led_num_t;@;[ ;0{
;o;;o;	;
@
;iÌ/;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;iá/;"uint8_t ;@;"o;;o;	;
@
;ié/;"gpio_no;@;[ ;0{;{; {	;!o;;o;	;
@
;iö/;"mepa_led_num_t ;@;"o;;o;	;
@
;i0;"led_num;@;[ ;0{;{; {	;!o;;o;	;
@
;i0;"mepa_gpio_mode_t ;@;"o;;o;	;
@
;i#0;"	mode;@;[ ;0;o;;o;	;
@
;i+0;"mepa_gpio_conf_t;@;[ ;0{
;o;;o;	;
@
;i`0;"typedef;@;{;o;;o;	;
@
;ih0;"	enum;@;[	{;{	;o;;o;	;
@
;is0;" MEPA_PREEMPTION_NORMAL_SFD ;@;o;;o;	;
@
;i0;"=;@;o;;o;	;
@
;i0;"0;@;0{;{;o;;o;	;
@
;i0;"MEPA_PREEMPTION_SMD_E;@;0{;{;o;;o;	;
@
;i²0;"*MEPA_PREEMPTION_SMD_EXCEPT_CONTINUOUS;@;0{;{;o;;o;	;
@
;iÝ0;"MEPA_PREEMPTION_SMD_ALL;@;0;o;;o;	;
@
;iø0;"mepa_preemption_mode_t;@;[ ;0{
;o;;o;	;
@
;i(1;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;i=1;"uint8_t ;@;"o;;o;	;
@
;iE1;"sof_no;@;[ ;0{;{; {	;!o;;o;	;
@
;iQ1;"mepa_bool_t ;@;"o;;o;	;
@
;i]1;"ingress;@;[ ;0{;{; {	;!o;;o;	;
@
;ij1;"mepa_preemption_mode_t ;@;"o;;o;	;
@
;i1;"sof_preemption_mode;@;[ ;0;o;;o;	;
@
;i1;"mepa_start_of_frame_conf_t;@;[ ;0{
;o;;o;	;
@
;iÌ1;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;iá1;"mepa_bool_t ;@;"o;;o;	;
@
;ií1;"far_end_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;iV2;"mepa_bool_t ;@;"o;;o;	;
@
;ib2;"near_end_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;iÃ2;"mepa_bool_t ;@;"o;;o;	;
@
;iÏ2;"connector_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i@3;"mepa_bool_t ;@;"o;;o;	;
@
;iL3;"mac_serdes_input_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i½3;"mepa_bool_t ;@;"o;;o;	;
@
;iÉ3;"mac_serdes_facility_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i=4;"mepa_bool_t ;@;"o;;o;	;
@
;iI4;"mac_serdes_equip_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;iµ4;"mepa_bool_t ;@;"o;;o;	;
@
;iÁ4;"media_serdes_input_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i+5;"mepa_bool_t ;@;"o;;o;	;
@
;i75;"media_serdes_facility_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i°5;"mepa_bool_t ;@;"o;;o;	;
@
;i¼5;"media_serdes_equip_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i86;"mepa_bool_t ;@;"o;;o;	;
@
;iD6;"qsgmii_pcs_tbi_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i·6;"mepa_bool_t ;@;"o;;o;	;
@
;iÃ6;"qsgmii_pcs_gmii_ena;@;[ ;0{;{; {	;!o;;o;	;
@
;i-7;"mepa_bool_t ;@;"o;;o;	;
@
;i97;"qsgmii_serdes_ena;@;[ ;0;o;;o;	;
@
;iÚ7;"mepa_loopback_t;@;[ ;0{
;o;;o;	;
@
;i8;"typedef;@;{;o;;o;	;
@
;i8;"	enum;@;[
{;{;o;;o;	;
@
;i8;""MEPA_SYNCE_CLOCK_SRC_DISABLED;@;0{;{;o;;o;	;
@
;iA8;"&MEPA_SYNCE_CLOCK_SRC_SERDES_MEDIA;@;0{;{;o;;o;	;
@
;ih8;"&MEPA_SYNCE_CLOCK_SRC_COPPER_MEDIA;@;0{;{;o;;o;	;
@
;i8;"$MEPA_SYNCE_CLOCK_SRC_CLOCK_IN_1;@;0{;{;o;;o;	;
@
;i´8;"%MEPA_SYNCE_CLOCK_SRC_CLOCK_IN_2
;@;0;o;;o;	;
@
;iÖ8;"mepa_synce_clock_src_t;@;[ ;0{
;o;;o;	;
@
;i9;"typedef;@;{;o;;o;	;
@
;i9;"	enum;@;[{;{	;o;;o;	;
@
;i&9;"MEPA_SYNCE_CLOCK_DST_1 ;@;o;;o;	;
@
;i=9;"=;@;o;;o;	;
@
;i?9;"0;@;0{;{;o;;o;	;
@
;iF9;"MEPA_SYNCE_CLOCK_DST_2;@;0{;{;o;;o;	;
@
;ib9;"MEPA_SYNCE_CLOCK_DST_MAX;@;0;o;;o;	;
@
;i~9;"mepa_synce_clock_dst_t;@;[ ;0{
;o;;o;	;
@
;iÁ9;"typedef;@;{;o;;o;	;
@
;iÉ9;"	enum;@;[{;{;o;;o;	;
@
;iÔ9;"MEPA_FREQ_25M;@;0{;{;o;;o;	;
@
;i:;"MEPA_FREQ_31_25M;@;0{;{;o;;o;	;
@
;i@:;"MEPA_FREQ_125M;@;0;o;;o;	;
@
;is:;"mepa_freq_t;@;[ ;0{
;o;;o;	;
@
;i³:;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;iÈ:;"mepa_synce_clock_src_t ;@;"o;;o;	;
@
;iß:;"src;@;[ ;0{;{; {	;!o;;o;	;
@
;iü:;"mepa_synce_clock_dst_t ;@;"o;;o;	;
@
;i;;"dst;@;[ ;0{;{; {	;!o;;o;	;
@
;i;;;"mepa_freq_t            ;@;"o;;o;	;
@
;iR;;"	freq;@;[ ;0;o;;o;	;
@
;i{;;"mepa_synce_clock_conf_t;@;[ ;0{
;o;;o;	;
@
;iµ;;"typedef;@;{;o;;o;	;
@
;i½;;"	enum;@;[{;{;o;;o;	;
@
;iÈ;;"MEPA_TRACE_GRP_GEN;@;0{;{;o;;o;	;
@
;iÿ;;"MEPA_TRACE_GRP_TS;@;0;o;;o;	;
@
;i-<;"mepa_trace_group_t;@;[ ;0{
;o;;o;	;
@
;iB<;"typedef;@;{;[
{;{; {	;!o;;o;	;
@
;iW<;"mepa_trace_group_t  ;@;"o;;o;	;
@
;ik<;"
group;@;[ ;0{;{; {	;!o;;o;	;
@
;iv<;"mepa_trace_level_t  ;@;"o;;o;	;
@
;i<;"
level;@;[ ;0{;{; {	;!o;;o;	;
@
;i<;"const char         *;@;"o;;o;	;
@
;i©<;"location;@;[ ;0{;{; {	;!o;;o;	;
@
;i·<;"uint32_t            ;@;"o;;o;	;
@
;iË<;"	line;@;[ ;0{;{; {	;!o;;o;	;
@
;iÕ<;"const char         *;@;"o;;o;	;
@
;ié<;"format;@;[ ;0;o;;o;	;
@
;ió<;"mepa_trace_data_t;@;[ ;0{
;o;;o;	;
@
;i$=;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;i9=;"const char *;@;"o;;o;	;
@
;iE=;"function;@;[ ;0{;{; {	;!o;;o;	;
@
;ij=;"const char *;@;"o;;o;	;
@
;iv=;"	file;@;[ ;0{;{; {	;!o;;o;	;
@
;i=;"int        ;@;"o;;o;	;
@
;i¢=;"	line;@;[ ;0;o;;o;	;
@
;iÄ=;"mepa_lock_t;@;[ ;0{
;o;;o;	;
@
;ié=;"typedef;@;{;o;;o;	;
@
;iñ=;"	enum;@;[{;{	;o;;o;	;
@
;iü=;"MEPA_CAP_SPEED_MASK_1G ;@;o;;o;	;
@
;i>;"=;@;o;;o;	;
@
;i>;"0x1;@;0{;{	;o;;o;	;
@
;iI>;"MEPA_CAP_SPEED_MASK_2G5 ;@;o;;o;	;
@
;ia>;"=;@;o;;o;	;
@
;ic>;"	0x40;@;0{;{	;o;;o;	;
@
;i>;"MEPA_CAP_SPEED_MASK_10G ;@;o;;o;	;
@
;i¯>;"=;@;o;;o;	;
@
;i±>;"0x2;@;0{;{	;o;;o;	;
@
;iå>;"MEPA_CAP_TS_MASK_GEN_1 ;@;o;;o;	;
@
;iü>;"=;@;o;;o;	;
@
;iþ>;"0x4;@;0{;{	;o;;o;	;
@
;iW?;"MEPA_CAP_TS_MASK_GEN_2 ;@;o;;o;	;
@
;in?;"=;@;o;;o;	;
@
;ip?;"0x8;@;0{;{	;o;;o;	;
@
;iÒ?;"MEPA_CAP_TS_MASK_GEN_3 ;@;o;;o;	;
@
;ié?;"=;@;o;;o;	;
@
;ië?;"	0x10;@;0{;{	;o;;o;	;
@
;iD@;"MEPA_CAP_TS_MASK_NONE  ;@;o;;o;	;
@
;i[@;"=;@;o;;o;	;
@
;i]@;"	0x20;@;0;o;;o;	;
@
;i@;"mepa_phy_cap_t;@;[ ;0{
;o;;o;	;
@
;iºA;"typedef;@;{;[	{;{; {	;!o;;o;	;
@
;iÏA;"uint16_t             ;@;"o;;o;	;
@
;iäA;"part_number;@;[ ;0{;{; {	;!o;;o;	;
@
;iB;"uint16_t             ;@;"o;;o;	;
@
;i"B;"revision;@;[ ;0{;{; {	;!o;;o;	;
@
;iNB;"mepa_phy_cap_t       ;@;"o;;o;	;
@
;icB;"cap;@;[ ;0{;{; {	;!o;;o;	;
@
;iB;"mepa_port_no_t       ;@;"o;;o;	;
@
;i³B;"ts_base_port;@;[ ;0;o;;o;	;
@
;iNC;"mepa_phy_info_t;@;[ ;0{
;o;;o;	;
@
;izC;"typedef;@;{;o;;o;	;
@
;iC;"	enum;@;[{;{;o;;o;	;
@
;iC;"MEPA_DEBUG_LAYER_ALL;@;0{;{;o;;o;	;
@
;iºC;"MEPA_DEBUG_LAYER_AIL;@;0{;{;o;;o;	;
@
;iøC;"MEPA_DEBUG_LAYER_CIL  ;@;0;o;;o;	;
@
;i-D;"mepa_debug_layer_t;@;[ ;0{
;o;;o;	;
@
;ifD;"typedef;@;{;o;;o;	;
@
;inD;"	enum;@;[
{;{;o;;o;	;
@
;iyD;"MEPA_DEBUG_GROUP_ALL    ;@;0{;{;o;;o;	;
@
;i­D;"MEPA_DEBUG_GROUP_PHY    ;@;0{;{;o;;o;	;
@
;iÚD;"MEPA_DEBUG_GROUP_PHY_TS ;@;0{;{;o;;o;	;
@
;iE;"MEPA_DEBUG_GROUP_MACSEC ;@;0{;{;o;;o;	;
@
;iE;"!MEPA_DEBUG_GROUP_COUNT      ;@;0;o;;o;	;
@
;i»E;"mepa_debug_group_t;@;[ ;0{
;o;;o;	;
@
;iúE;"typedef;@;{;[
{;{; {	;!o;;o;	;
@
;iF;"mepa_debug_layer_t ;@;"o;;o;	;
@
;i"F;"
layer;@;[ ;0{;{; {	;!o;;o;	;
@
;iAF;"mepa_debug_group_t ;@;"o;;o;	;
@
;iTF;"
group;@;[ ;0{;{; {	;!o;;o;	;
@
;i|F;"mepa_bool_t        ;@;"o;;o;	;
@
;iF;"	full;@;[ ;0{;{; {	;!o;;o;	;
@
;i¾F;"mepa_bool_t        ;@;"o;;o;	;
@
;iÑF;"
clear;@;[ ;0{;{; {	;!o;;o;	;
@
;iùF;"mepa_bool_t        ;@;"o;;o;	;
@
;iG;"vml_format;@;[ ;0;o;;o;	;
@
;i<G;"mepa_debug_info_t;@;[ ;0{
;o;;o;	;
@
;i~G;"typedef;@;{;[
{;{; {	;!o;;o;	;
@
;iG;"mepa_port_speed_t	;@;"o;;o;	;
@
;i¥G;"
speed;@;[ ;0{;{; {	;!o;;o;	;
@
;i°G;"mepa_media_mode_t	;@;"o;;o;	;
@
;iÂG;"mdi;@;[ ;0{;{; {	;!o;;o;	;
@
;iËG;"uint32_t		;@;"o;;o;	;
@
;iÕG;"frames;@;[ ;0{;{; {	;!o;;o;	;
@
;iáG;"uint32_t		;@;"o;;o;	;
@
;iëG;"good_cnt;@;[ ;0{;{; {	;!o;;o;	;
@
;iùG;"uint32_t		;@;"o;;o;	;
@
;iH;"err_cnt;@;[ ;0;o;;o;	;
@
;iH;"mepa_selftest_info_t;@;[ ;0{
;o;;o;	;
@
;iDH;"typedef;@;{;o;;o;	;
@
;iLH;"	enum;@;[{;{;o;;o;	;
@
;iWH;"MEPA_PHY_DIRECTION_HOST;@;0{;{;o;;o;	;
@
;iH;"MEPA_PHY_DIRECTION_LINE;@;0{;{;o;;o;	;
@
;iÏH;"MEPA_PHY_DIRECTION_CNT;@;0;o;;o;	;
@
;i	I;"mepa_phy_prbs_direction_t;@;[ ;0{
;o;;o;	;
@
;iDI;"typedef;@;{;o;;o;	;
@
;iLI;"	enum;@;[{;{;o;;o;	;
@
;iWI;"MEPA_PHY_PRBS_TYPE_SERDES;@;0{;{;o;;o;	;
@
;iI;"MEPA_PHY_PRBS_TYPE_PCS;@;0{;{;o;;o;	;
@
;iÑI;"MEPA_PHY_PRBS_TYPE_CNT;@;0;o;;o;	;
@
;iJ;"mepa_phy_prbs_type_t;@;[ ;0{
;o;;o;	;
@
;i;J;"typedef;@;{;o;;o;	;
@
;iCJ;"	enum;@;[{;{;o;;o;	;
@
;iNJ;"MEPA_PRBS7;@;0{;{;o;;o;	;
@
;irJ;"MEPA_PRBS15;@;0{;{;o;;o;	;
@
;iJ;"MEPA_PRBS31;@;0;o;;o;	;
@
;i¹J;"mepa_prbs_pattern_t;@;[ ;0{
;o;;o;	;
@
;ièJ;"typedef;@;{;o;;o;	;
@
;iðJ;"	enum;@;[{;{;o;;o;	;
@
;iûJ;"MEPA_PRBS_CLK25_MHZ;@;0{;{;o;;o;	;
@
;i(K;"MEPA_PRBS_CLK125_MHZ;@;0;o;;o;	;
@
;iTK;"mepa_prbs_clock_t;@;[ ;0{
;o;;o;	;
@
;iK;"typedef;@;{;o;;o;	;
@
;iK;"	enum;@;[{;{;o;;o;	;
@
;iK;" MEPA_PRBS_INTERNAL_LOOPBACK;@;0{;{;o;;o;	;
@
;iÛK;" MEPA_PRBS_EXTERNAL_LOOPBACK;@;0;o;;o;	;
@
;iL;"mepa_prbs_loopback_t;@;[ ;0{
;o;;o;	;
@
;iSL;"typedef;@;{;[	{;{; {	;!o;;o;	;
@
;ihL;"mepa_bool_t ;@;"o;;o;	;
@
;itL;"enable;@;[ ;0{;{; {	;!o;;o;	;
@
;i¡L;"mepa_prbs_pattern_t ;@;"o;;o;	;
@
;iµL;"prbsn_sel;@;[ ;0{;{; {	;!o;;o;	;
@
;iàL;"mepa_prbs_clock_t ;@;"o;;o;	;
@
;iòL;"clk;@;[ ;0{;{; {	;!o;;o;	;
@
;iM;"mepa_prbs_loopback_t ;@;"o;;o;	;
@
;i0M;"loopback;@;[ ;0;o;;o;	;
@
;iWM;"#mepa_phy_prbs_generator_conf_t;@;[ ;0{
;o;;o;	;
@
;iM;"typedef;@;{;[{;{; {	;!o;;o;	;
@
;i²M;"mepa_prbs_pattern_t  ;@;"o;;o;	;
@
;iÇM;"prbsn_sel;@;[ ;0{;{; {	;!o;;o;	;
@
;iòM;"uint32_t ;@;"o;;o;	;
@
;iûM;"no_of_errors;@;[ ;0;o;;o;	;
@
;i-N;"!mepa_phy_prbs_monitor_conf_t;@;[ ;0{;o;;o;	;
@
;iLN;"R#include <microchip/ethernet/hdr_end.h>  /**< ALL INCLUDE ABOVE THIS LINE */
;@{;o;;o;	;
@
;iN;"9#endif /**< _MICROCHIP_ETHERNET_PHY_API_TYPES_H_ */
;@