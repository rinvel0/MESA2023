{:	root[2{:ppo:Parslet::Slice:@positiono:Parslet::Position:@string"u// Copyright (c) 2004-2020 Microchip Technology Inc. and its subsidiaries.
// SPDX-License-Identifier: MIT


#ifndef _MICROCHIP_ETHERNET_BOARD_PHY_DRIVER_H_
#define _MICROCHIP_ETHERNET_BOARD_PHY_DRIVER_H_

#include <microchip/ethernet/board/api/types.h>
#include <microchip/ethernet/phy/api/types.h>

#include <microchip/ethernet/hdr_start.h>

// Reset the PHY hardware
mepa_rc meba_phy_reset(meba_inst_t inst, mepa_port_no_t port_no,
                       const mepa_reset_param_t *rst_conf);

// Get the current status of the PHY.
mepa_rc meba_phy_status_poll(meba_inst_t inst, mepa_port_no_t port_no,
                             mepa_status_t *status);

// Set the configuration to the PHY.
mepa_rc meba_phy_conf_set(meba_inst_t inst, mepa_port_no_t port_no,
                          const mepa_conf_t *conf);

// Get the current PHY configuration.
mepa_rc meba_phy_conf_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_conf_t *const  conf);

// Get the PHY interface based on speed.
mepa_rc meba_phy_if_get(meba_inst_t inst, mepa_port_no_t port_no,
                        mepa_port_speed_t speed, mepa_port_interface_t *intf);

// Sets the power mode in PHY.
mepa_rc meba_phy_power_set(meba_inst_t inst, mepa_port_no_t port_no,
                           mepa_power_mode_t power);

// Start cable diagnostics on PHY port.
mepa_rc meba_phy_cable_diag_start(meba_inst_t inst, mepa_port_no_t port_no, int mode);

// Get the result of cable diagnostics.
mepa_rc meba_phy_cable_diag_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_cable_diag_result_t *result);

// Sets the media type in case the port is a dual media port with external phy.
mepa_rc meba_phy_media_set(meba_inst_t inst, mepa_port_no_t port_no, mepa_media_interface_t phy_media_if);

// Gets Copper 1G PHY auto negotiation status.
mepa_rc meba_phy_aneg_status_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_aneg_status_t *status);

// Read registers using clause22 format for debugging.
// address format : bits 0 - 4 : address within page i.e. 0 - 31 addresses.
//                       5 - 31: page number.
mepa_rc meba_phy_clause22_read(meba_inst_t inst, mepa_port_no_t port_no, uint32_t address, uint16_t *const value);

// Write registers using clause22 format for debugging.
// address format : bits 0 - 4 : address within page i.e. 0 - 31 addresses.
//                       5 - 31: page number.
mepa_rc meba_phy_clause22_write(meba_inst_t inst, mepa_port_no_t port_no, uint32_t address, uint16_t value);

// Read registers using clause45 format for debugging.
// address format : bits 0  - 15 : address within a extended page or mmd device.
//                       16 - 26 : extended page number
//                       27 - 31 : mmd device number, '0' for extended page.
mepa_rc meba_phy_clause45_read(meba_inst_t inst, mepa_port_no_t port_no, uint32_t address, uint16_t *const value);

// Write registers using clause45 format for debugging.
// address format : bits 0  - 15 : address within a extended page or mmd device.
//                       16 - 26 : extended page number
//                       27 - 31 : mmd device number, '0' for extended page.
mepa_rc meba_phy_clause45_write(meba_inst_t inst, mepa_port_no_t port_no, uint32_t address, uint16_t value);

// Enable the event in phy.
mepa_rc meba_phy_event_enable_set(meba_inst_t inst, mepa_port_no_t port_no, mepa_event_t event, mesa_bool_t enable);

// Get the events enabled currently in phy.
mepa_rc meba_phy_event_enable_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_event_t *const event);

// Get the current status of events enabled in phy.
mepa_rc meba_phy_event_poll(meba_inst_t inst, mepa_port_no_t port_no, mepa_event_t *const event);

// Enable or disable the loopback in phy. Used for debugging purpose.
mepa_rc meba_phy_loopback_set(meba_inst_t inst, mepa_port_no_t port_no, const mepa_loopback_t *loopback);

// Get current loopback configuration.
mepa_rc meba_phy_loopback_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_loopback_t *const loopback);

// Set the phy gpio mode.
mepa_rc meba_phy_gpio_mode_set(meba_inst_t inst, mepa_port_no_t port_no, const mepa_gpio_conf_t *gpio_conf);

// Set the phy gpio pin data value.
mepa_rc meba_phy_gpio_out_set(meba_inst_t inst, mepa_port_no_t port_no, uint8_t gpio_no, mepa_bool_t enable);

// Get the phy gpio pin data value.
mepa_rc meba_phy_gpio_in_get(meba_inst_t inst, mepa_port_no_t port_no, uint8_t gpio_no, mepa_bool_t *const enable);

// Set the phy recovered clock configuration
mepa_rc meba_phy_synce_clock_conf_set(meba_inst_t inst, mepa_port_no_t port_no, const mepa_synce_clock_conf_t *conf);

// Get combined switch and PHY state
mepa_rc meba_port_status_get(meba_inst_t inst, mepa_port_no_t port_no, mesa_port_status_t *const status);

// Set combined switch and PHY test configuration
mepa_rc meba_port_test_conf_set(meba_inst_t inst, mepa_port_no_t port_no, const mesa_port_test_conf_t *const conf);

// Debug print for PHY
mepa_rc meba_phy_debug_info_print(const meba_inst_t         inst,
                                  const mesa_debug_printf_t pr,
                                  const mesa_debug_info_t   *const info);

// Get the phy info
mepa_rc meba_phy_info_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_phy_info_t *const phy_info);

// Enable/Disable isolate mode
mepa_rc meba_isolate_mode_conf(meba_inst_t inst, mepa_port_no_t port_no,            const mepa_bool_t iso_en);

// Get the SQI value
mepa_rc meba_phy_sqi_read(meba_inst_t inst, mepa_port_no_t port_no, uint32_t *const value);

// Set the SOF value
mepa_rc meba_phy_start_of_frame_conf_set(meba_inst_t inst, mepa_port_no_t port_no, mepa_start_of_frame_conf_t *const value);

// Get the SOF value
mepa_rc meba_phy_start_of_frame_conf_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_start_of_frame_conf_t *const value);

// PHY get Frame Preemption
mepa_rc meba_phy_framepreempt_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_bool_t *const value);

// Start Self-Test
mepa_rc meba_selftest_start(meba_inst_t inst, mepa_port_no_t port_no,
			    const mepa_selftest_info_t *inf);

// Read Self-Test Checking counters
mepa_rc meba_selftest_read(meba_inst_t inst, mepa_port_no_t port_no,
                            mepa_selftest_info_t *const inf);

// To Set PRBS
mepa_rc meba_prbs_set(meba_inst_t inst, mepa_port_no_t port_no, mepa_phy_prbs_type_t type, mepa_phy_prbs_direction_t direction, mepa_phy_prbs_generator_conf_t *const conf);

// To Get PRBS
mepa_rc meba_prbs_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_phy_prbs_type_t type, mepa_phy_prbs_direction_t direction, mepa_phy_prbs_generator_conf_t *const conf);

// To inject an error to PRBS
mepa_rc meba_prbs_monitor_set(meba_inst_t inst, mepa_port_no_t port_no, mepa_phy_prbs_monitor_conf_t *const value);

//To get error status of PRBS
mepa_rc meba_prbs_monitor_get(meba_inst_t inst, mepa_port_no_t port_no, mepa_phy_prbs_monitor_conf_t *const value);

#include <microchip/ethernet/hdr_end.h>
#endif //_MICROCHIP_ETHERNET_BOARD_PHY_DRIVER_H
:@byteposir:	@str"5#ifndef _MICROCHIP_ETHERNET_BOARD_PHY_DRIVER_H_
:@line_cacheo:Parslet::Source::LineCache:@line_endse:!Parslet::Source::RangeSearch[ìiPipiqiriùiÕiŒi˛i,i-iWiXiri≥iÔiii]iíiìi∏i¸i0i1iWi∂i∑i‡i"iqiriëi÷iii4iãiåi¥i!i"iri›iﬁiiuivi≠i˘i'iöiõi”i	iM	i∫	iª	iÚ	iC
i{
i»
i;i<iti≈i˝iJi∑i∏i‘iIiJiviﬁiﬂiiuiviºi&i'iNi∏iπi”i@iAiei”i‘i¯ilimiöiii6i†i°i”iGiHi_i°i·i+i,i@i¶ißi∆i5i6iKißi®iΩi:i;iPiÕiŒiÍiQiRiei´i‘i’i˘i>i|i}iåi9i:iIiˆi˜iiâiäi®iiiEiu:@last_line_endiu{;o;;o;	;
@
;iù;"6#define _MICROCHIP_ETHERNET_BOARD_PHY_DRIVER_H_

;@{;o;;o;	;
@
;iŒ;"5#include <microchip/ethernet/board/api/types.h>
;@{;o;;o;	;
@
;i˛;"4#include <microchip/ethernet/phy/api/types.h>

;@{;o;;o;	;
@
;i-;"0#include <microchip/ethernet/hdr_start.h>

;@{:func_proto{:normal{	:	typeo;;o;	;
@
;ir;"mepa_rc ;@:	nameo;;o;	;
@
;iz;"meba_phy_reset;@:
array[ :cap0:	args[{;{	;o;;o;	;
@
;iâ;"meba_inst_t ;@;o;;o;	;
@
;iï;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iõ;"mepa_port_no_t ;@;o;;o;	;
@
;i™;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i ;"const mepa_reset_param_t *;@;o;;o;	;
@
;i‰;"rst_conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;i;"mepa_rc ;@;o;;o;	;
@
;i;"meba_phy_status_poll;@;[ ;0;[{;{	;o;;o;	;
@
;i3;"meba_inst_t ;@;o;;o;	;
@
;i?;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iE;"mepa_port_no_t ;@;o;;o;	;
@
;iT;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iz;"mepa_status_t *;@;o;;o;	;
@
;iâ;"status;@;[ ;0;0{;{;{	;o;;o;	;
@
;i∏;"mepa_rc ;@;o;;o;	;
@
;i¿;"meba_phy_conf_set;@;[ ;0;[{;{	;o;;o;	;
@
;i“;"meba_inst_t ;@;o;;o;	;
@
;iﬁ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i‰;"mepa_port_no_t ;@;o;;o;	;
@
;iÛ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"const mepa_conf_t *;@;o;;o;	;
@
;i);"	conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;iW;"mepa_rc ;@;o;;o;	;
@
;i_;"meba_phy_conf_get;@;[ ;0;[{;{	;o;;o;	;
@
;iq;"meba_inst_t ;@;o;;o;	;
@
;i};"	inst;@;[ ;0{;{	;o;;o;	;
@
;iÉ;"mepa_port_no_t ;@;o;;o;	;
@
;ií;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iõ;"mepa_conf_t *const  ;@;o;;o;	;
@
;iØ;"	conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;i‡;"mepa_rc ;@;o;;o;	;
@
;iË;"meba_phy_if_get;@;[ ;0;[	{;{	;o;;o;	;
@
;i¯;"meba_inst_t ;@;o;;o;	;
@
;i;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i
;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i:;"mepa_port_speed_t ;@;o;;o;	;
@
;iL;"
speed;@;[ ;0{;{	;o;;o;	;
@
;iS;"mepa_port_interface_t *;@;o;;o;	;
@
;ij;"	intf;@;[ ;0;0{;{;{	;o;;o;	;
@
;ië;"mepa_rc ;@;o;;o;	;
@
;iô;"meba_phy_power_set;@;[ ;0;[{;{	;o;;o;	;
@
;i¨;"meba_inst_t ;@;o;;o;	;
@
;i∏;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iæ;"mepa_port_no_t ;@;o;;o;	;
@
;iÕ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iÒ;"mepa_power_mode_t ;@;o;;o;	;
@
;i;"
power;@;[ ;0;0{;{;{	;o;;o;	;
@
;i4;"mepa_rc ;@;o;;o;	;
@
;i<;"meba_phy_cable_diag_start;@;[ ;0;[{;{	;o;;o;	;
@
;iV;"meba_inst_t ;@;o;;o;	;
@
;ib;"	inst;@;[ ;0{;{	;o;;o;	;
@
;ih;"mepa_port_no_t ;@;o;;o;	;
@
;iw;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iÄ;"	int ;@;o;;o;	;
@
;iÑ;"	mode;@;[ ;0;0{;{;{	;o;;o;	;
@
;i¥;"mepa_rc ;@;o;;o;	;
@
;iº;"meba_phy_cable_diag_get;@;[ ;0;[{;{	;o;;o;	;
@
;i‘;"meba_inst_t ;@;o;;o;	;
@
;i‡;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iÊ;"mepa_port_no_t ;@;o;;o;	;
@
;iı;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i˛;"mepa_cable_diag_result_t *;@;o;;o;	;
@
;i;"result;@;[ ;0;0{;{;{	;o;;o;	;
@
;ir;"mepa_rc ;@;o;;o;	;
@
;iz;"meba_phy_media_set;@;[ ;0;[{;{	;o;;o;	;
@
;iç;"meba_inst_t ;@;o;;o;	;
@
;iô;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iü;"mepa_port_no_t ;@;o;;o;	;
@
;iÆ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i∑;"mepa_media_interface_t ;@;o;;o;	;
@
;iŒ;"phy_media_if;@;[ ;0;0{;{;{	;o;;o;	;
@
;i;"mepa_rc ;@;o;;o;	;
@
;i;"meba_phy_aneg_status_get;@;[ ;0;[{;{	;o;;o;	;
@
;i.;"meba_inst_t ;@;o;;o;	;
@
;i:;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i@;"mepa_port_no_t ;@;o;;o;	;
@
;iO;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iX;"mepa_aneg_status_t *;@;o;;o;	;
@
;il;"status;@;[ ;0;0{;{;{	;o;;o;	;
@
;i';"mepa_rc ;@;o;;o;	;
@
;i/;"meba_phy_clause22_read;@;[ ;0;[	{;{	;o;;o;	;
@
;iF;"meba_inst_t ;@;o;;o;	;
@
;iR;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iX;"mepa_port_no_t ;@;o;;o;	;
@
;ig;"port_no;@;[ ;0{;{	;o;;o;	;
@
;ip;"uint32_t ;@;o;;o;	;
@
;iy;"address;@;[ ;0{;{	;o;;o;	;
@
;iÇ;"uint16_t *const ;@;o;;o;	;
@
;ií;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;iM	;"mepa_rc ;@;o;;o;	;
@
;iU	;"meba_phy_clause22_write;@;[ ;0;[	{;{	;o;;o;	;
@
;im	;"meba_inst_t ;@;o;;o;	;
@
;iy	;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i	;"mepa_port_no_t ;@;o;;o;	;
@
;ié	;"port_no;@;[ ;0{;{	;o;;o;	;
@
;ió	;"uint32_t ;@;o;;o;	;
@
;i†	;"address;@;[ ;0{;{	;o;;o;	;
@
;i©	;"uint16_t ;@;o;;o;	;
@
;i≤	;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;i»
;"mepa_rc ;@;o;;o;	;
@
;i–
;"meba_phy_clause45_read;@;[ ;0;[	{;{	;o;;o;	;
@
;iÁ
;"meba_inst_t ;@;o;;o;	;
@
;iÛ
;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i˘
;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"uint32_t ;@;o;;o;	;
@
;i;"address;@;[ ;0{;{	;o;;o;	;
@
;i#;"uint16_t *const ;@;o;;o;	;
@
;i3;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;iJ;"mepa_rc ;@;o;;o;	;
@
;iR;"meba_phy_clause45_write;@;[ ;0;[	{;{	;o;;o;	;
@
;ij;"meba_inst_t ;@;o;;o;	;
@
;iv;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i|;"mepa_port_no_t ;@;o;;o;	;
@
;iã;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iî;"uint32_t ;@;o;;o;	;
@
;iù;"address;@;[ ;0{;{	;o;;o;	;
@
;i¶;"uint16_t ;@;o;;o;	;
@
;iØ;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;i‘;"mepa_rc ;@;o;;o;	;
@
;i‹;"meba_phy_event_enable_set;@;[ ;0;[	{;{	;o;;o;	;
@
;iˆ;"meba_inst_t ;@;o;;o;	;
@
;i;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i ;"mepa_event_t ;@;o;;o;	;
@
;i-;"
event;@;[ ;0{;{	;o;;o;	;
@
;i4;"mesa_bool_t ;@;o;;o;	;
@
;i@;"enable;@;[ ;0;0{;{;{	;o;;o;	;
@
;iv;"mepa_rc ;@;o;;o;	;
@
;i~;"meba_phy_event_enable_get;@;[ ;0;[{;{	;o;;o;	;
@
;iò;"meba_inst_t ;@;o;;o;	;
@
;i§;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i™;"mepa_port_no_t ;@;o;;o;	;
@
;iπ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i¬;"mepa_event_t *const ;@;o;;o;	;
@
;i÷;"
event;@;[ ;0;0{;{;{	;o;;o;	;
@
;i;"mepa_rc ;@;o;;o;	;
@
;i;"meba_phy_event_poll;@;[ ;0;[{;{	;o;;o;	;
@
;i/;"meba_inst_t ;@;o;;o;	;
@
;i;;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iA;"mepa_port_no_t ;@;o;;o;	;
@
;iP;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iY;"mepa_event_t *const ;@;o;;o;	;
@
;im;"
event;@;[ ;0;0{;{;{	;o;;o;	;
@
;iº;"mepa_rc ;@;o;;o;	;
@
;iƒ;"meba_phy_loopback_set;@;[ ;0;[{;{	;o;;o;	;
@
;i⁄;"meba_inst_t ;@;o;;o;	;
@
;iÊ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iÏ;"mepa_port_no_t ;@;o;;o;	;
@
;i˚;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"const mepa_loopback_t *;@;o;;o;	;
@
;i;"loopback;@;[ ;0;0{;{;{	;o;;o;	;
@
;iN;"mepa_rc ;@;o;;o;	;
@
;iV;"meba_phy_loopback_get;@;[ ;0;[{;{	;o;;o;	;
@
;il;"meba_inst_t ;@;o;;o;	;
@
;ix;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i~;"mepa_port_no_t ;@;o;;o;	;
@
;iç;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iñ;"mepa_loopback_t *const ;@;o;;o;	;
@
;i≠;"loopback;@;[ ;0;0{;{;{	;o;;o;	;
@
;i”;"mepa_rc ;@;o;;o;	;
@
;i€;"meba_phy_gpio_mode_set;@;[ ;0;[{;{	;o;;o;	;
@
;iÚ;"meba_inst_t ;@;o;;o;	;
@
;i˛;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"const mepa_gpio_conf_t *;@;o;;o;	;
@
;i4;"gpio_conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;ie;"mepa_rc ;@;o;;o;	;
@
;im;"meba_phy_gpio_out_set;@;[ ;0;[	{;{	;o;;o;	;
@
;iÉ;"meba_inst_t ;@;o;;o;	;
@
;iè;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iï;"mepa_port_no_t ;@;o;;o;	;
@
;i§;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i≠;"uint8_t ;@;o;;o;	;
@
;iµ;"gpio_no;@;[ ;0{;{	;o;;o;	;
@
;iæ;"mepa_bool_t ;@;o;;o;	;
@
;i ;"enable;@;[ ;0;0{;{;{	;o;;o;	;
@
;i¯;"mepa_rc ;@;o;;o;	;
@
;i ;"meba_phy_gpio_in_get;@;[ ;0;[	{;{	;o;;o;	;
@
;i;"meba_inst_t ;@;o;;o;	;
@
;i!;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i';"mepa_port_no_t ;@;o;;o;	;
@
;i6;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i?;"uint8_t ;@;o;;o;	;
@
;iG;"gpio_no;@;[ ;0{;{	;o;;o;	;
@
;iP;"mepa_bool_t *const ;@;o;;o;	;
@
;ic;"enable;@;[ ;0;0{;{;{	;o;;o;	;
@
;iö;"mepa_rc ;@;o;;o;	;
@
;i¢;""meba_phy_synce_clock_conf_set;@;[ ;0;[{;{	;o;;o;	;
@
;i¿;"meba_inst_t ;@;o;;o;	;
@
;iÃ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i“;"mepa_port_no_t ;@;o;;o;	;
@
;i·;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iÍ;"$const mepa_synce_clock_conf_t *;@;o;;o;	;
@
;i	;"	conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;i6;"mepa_rc ;@;o;;o;	;
@
;i>;"meba_port_status_get;@;[ ;0;[{;{	;o;;o;	;
@
;iS;"meba_inst_t ;@;o;;o;	;
@
;i_;"	inst;@;[ ;0{;{	;o;;o;	;
@
;ie;"mepa_port_no_t ;@;o;;o;	;
@
;it;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i};"mesa_port_status_t *const ;@;o;;o;	;
@
;ió;"status;@;[ ;0;0{;{;{	;o;;o;	;
@
;i”;"mepa_rc ;@;o;;o;	;
@
;i€;"meba_port_test_conf_set;@;[ ;0;[{;{	;o;;o;	;
@
;iÛ;"meba_inst_t ;@;o;;o;	;
@
;iˇ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"(const mesa_port_test_conf_t *const ;@;o;;o;	;
@
;i@;"	conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;i_;"mepa_rc ;@;o;;o;	;
@
;ig;"meba_phy_debug_info_print;@;[ ;0;[{;{	;o;;o;	;
@
;iÅ;"const meba_inst_t         ;@;o;;o;	;
@
;iõ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i√;"const mesa_debug_printf_t ;@;o;;o;	;
@
;i›;"pr;@;[ ;0{;{	;o;;o;	;
@
;i;"&const mesa_debug_info_t   *const ;@;o;;o;	;
@
;i$;"	info;@;[ ;0;0{;{;{	;o;;o;	;
@
;i@;"mepa_rc ;@;o;;o;	;
@
;iH;"meba_phy_info_get;@;[ ;0;[{;{	;o;;o;	;
@
;iZ;"meba_inst_t ;@;o;;o;	;
@
;if;"	inst;@;[ ;0{;{	;o;;o;	;
@
;il;"mepa_port_no_t ;@;o;;o;	;
@
;i{;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iÑ;"mepa_phy_info_t *const ;@;o;;o;	;
@
;iõ;"phy_info;@;[ ;0;0{;{;{	;o;;o;	;
@
;i∆;"mepa_rc ;@;o;;o;	;
@
;iŒ;"meba_isolate_mode_conf;@;[ ;0;[{;{	;o;;o;	;
@
;iÂ;"meba_inst_t ;@;o;;o;	;
@
;iÒ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i˜;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"const mepa_bool_t ;@;o;;o;	;
@
;i,;"iso_en;@;[ ;0;0{;{;{	;o;;o;	;
@
;iK;"mepa_rc ;@;o;;o;	;
@
;iS;"meba_phy_sqi_read;@;[ ;0;[{;{	;o;;o;	;
@
;ie;"meba_inst_t ;@;o;;o;	;
@
;iq;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iw;"mepa_port_no_t ;@;o;;o;	;
@
;iÜ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iè;"uint32_t *const ;@;o;;o;	;
@
;iü;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;iΩ;"mepa_rc ;@;o;;o;	;
@
;i≈;"%meba_phy_start_of_frame_conf_set;@;[ ;0;[{;{	;o;;o;	;
@
;iÊ;"meba_inst_t ;@;o;;o;	;
@
;iÚ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i¯;"mepa_port_no_t ;@;o;;o;	;
@
;i;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;"'mepa_start_of_frame_conf_t *const ;@;o;;o;	;
@
;i2;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;iP;"mepa_rc ;@;o;;o;	;
@
;iX;"%meba_phy_start_of_frame_conf_get;@;[ ;0;[{;{	;o;;o;	;
@
;iy;"meba_inst_t ;@;o;;o;	;
@
;iÖ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iã;"mepa_port_no_t ;@;o;;o;	;
@
;iö;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i£;"'mepa_start_of_frame_conf_t *const ;@;o;;o;	;
@
;i≈;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;iÍ;"mepa_rc ;@;o;;o;	;
@
;iÚ;"meba_phy_framepreempt_get;@;[ ;0;[{;{	;o;;o;	;
@
;i;"meba_inst_t ;@;o;;o;	;
@
;i;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i;"mepa_port_no_t ;@;o;;o;	;
@
;i-;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i6;"mepa_bool_t *const ;@;o;;o;	;
@
;iI;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;ie;"mepa_rc ;@;o;;o;	;
@
;im;"meba_selftest_start;@;[ ;0;[{;{	;o;;o;	;
@
;iÅ;"meba_inst_t ;@;o;;o;	;
@
;iç;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iì;"mepa_port_no_t ;@;o;;o;	;
@
;i¢;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i≤;"!const mepa_selftest_info_t *;@;o;;o;	;
@
;iŒ;"inf;@;[ ;0;0{;{;{	;o;;o;	;
@
;i˘;"mepa_rc ;@;o;;o;	;
@
;i;"meba_selftest_read;@;[ ;0;[{;{	;o;;o;	;
@
;i;"meba_inst_t ;@;o;;o;	;
@
;i ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i&;"mepa_port_no_t ;@;o;;o;	;
@
;i5;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iZ;"!mepa_selftest_info_t *const ;@;o;;o;	;
@
;iv;"inf;@;[ ;0;0{;{;{	;o;;o;	;
@
;iå;"mepa_rc ;@;o;;o;	;
@
;iî;"meba_prbs_set;@;[ ;0;[
{;{	;o;;o;	;
@
;i¢;"meba_inst_t ;@;o;;o;	;
@
;iÆ;"	inst;@;[ ;0{;{	;o;;o;	;
@
;i¥;"mepa_port_no_t ;@;o;;o;	;
@
;i√;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iÃ;"mepa_phy_prbs_type_t ;@;o;;o;	;
@
;i·;"	type;@;[ ;0{;{	;o;;o;	;
@
;iÁ;"mepa_phy_prbs_direction_t ;@;o;;o;	;
@
;i;"direction;@;[ ;0{;{	;o;;o;	;
@
;i;"+mepa_phy_prbs_generator_conf_t *const ;@;o;;o;	;
@
;i2;"	conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;iI;"mepa_rc ;@;o;;o;	;
@
;iQ;"meba_prbs_get;@;[ ;0;[
{;{	;o;;o;	;
@
;i_;"meba_inst_t ;@;o;;o;	;
@
;ik;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iq;"mepa_port_no_t ;@;o;;o;	;
@
;iÄ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;iâ;"mepa_phy_prbs_type_t ;@;o;;o;	;
@
;iû;"	type;@;[ ;0{;{	;o;;o;	;
@
;i§;"mepa_phy_prbs_direction_t ;@;o;;o;	;
@
;iæ;"direction;@;[ ;0{;{	;o;;o;	;
@
;i…;"+mepa_phy_prbs_generator_conf_t *const ;@;o;;o;	;
@
;iÔ;"	conf;@;[ ;0;0{;{;{	;o;;o;	;
@
;i;"mepa_rc ;@;o;;o;	;
@
;i;"meba_prbs_monitor_set;@;[ ;0;[{;{	;o;;o;	;
@
;i3;"meba_inst_t ;@;o;;o;	;
@
;i?;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iE;"mepa_port_no_t ;@;o;;o;	;
@
;iT;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i];")mepa_phy_prbs_monitor_conf_t *const ;@;o;;o;	;
@
;iÅ;"
value;@;[ ;0;0{;{;{	;o;;o;	;
@
;i®;"mepa_rc ;@;o;;o;	;
@
;i∞;"meba_prbs_monitor_get;@;[ ;0;[{;{	;o;;o;	;
@
;i∆;"meba_inst_t ;@;o;;o;	;
@
;i“;"	inst;@;[ ;0{;{	;o;;o;	;
@
;iÿ;"mepa_port_no_t ;@;o;;o;	;
@
;iÁ;"port_no;@;[ ;0{;{	;o;;o;	;
@
;i;")mepa_phy_prbs_monitor_conf_t *const ;@;o;;o;	;
@
;i;"
value;@;[ ;0;0{;o;;o;	;
@
;i;"-#include <microchip/ethernet/hdr_end.h>
;@{;o;;o;	;
@
;iE;"5#endif //_MICROCHIP_ETHERNET_BOARD_PHY_DRIVER_H
;@